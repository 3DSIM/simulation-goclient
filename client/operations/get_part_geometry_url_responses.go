package operations

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"

	strfmt "github.com/go-openapi/strfmt"

	"github.com/3dsim/simulation-goclient/models"
)

// GetPartGeometryURLReader is a Reader for the GetPartGeometryURL structure.
type GetPartGeometryURLReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GetPartGeometryURLReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {

	case 200:
		result := NewGetPartGeometryURLOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil

	case 401:
		result := NewGetPartGeometryURLUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 403:
		result := NewGetPartGeometryURLForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 404:
		result := NewGetPartGeometryURLNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		result := NewGetPartGeometryURLDefault(response.Code())
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		if response.Code()/100 == 2 {
			return result, nil
		}
		return nil, result
	}
}

// NewGetPartGeometryURLOK creates a GetPartGeometryURLOK with default headers values
func NewGetPartGeometryURLOK() *GetPartGeometryURLOK {
	return &GetPartGeometryURLOK{}
}

/*GetPartGeometryURLOK handles this case with default header values.

Successfully returns a part geometry url
*/
type GetPartGeometryURLOK struct {
	Payload *models.PartGeometryURL
}

func (o *GetPartGeometryURLOK) Error() string {
	return fmt.Sprintf("[GET /parts/{id}/geometryurl][%d] getPartGeometryUrlOK  %+v", 200, o.Payload)
}

func (o *GetPartGeometryURLOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.PartGeometryURL)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetPartGeometryURLUnauthorized creates a GetPartGeometryURLUnauthorized with default headers values
func NewGetPartGeometryURLUnauthorized() *GetPartGeometryURLUnauthorized {
	return &GetPartGeometryURLUnauthorized{}
}

/*GetPartGeometryURLUnauthorized handles this case with default header values.

Not authorized
*/
type GetPartGeometryURLUnauthorized struct {
	Payload *models.Error
}

func (o *GetPartGeometryURLUnauthorized) Error() string {
	return fmt.Sprintf("[GET /parts/{id}/geometryurl][%d] getPartGeometryUrlUnauthorized  %+v", 401, o.Payload)
}

func (o *GetPartGeometryURLUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetPartGeometryURLForbidden creates a GetPartGeometryURLForbidden with default headers values
func NewGetPartGeometryURLForbidden() *GetPartGeometryURLForbidden {
	return &GetPartGeometryURLForbidden{}
}

/*GetPartGeometryURLForbidden handles this case with default header values.

Forbidden
*/
type GetPartGeometryURLForbidden struct {
	Payload *models.Error
}

func (o *GetPartGeometryURLForbidden) Error() string {
	return fmt.Sprintf("[GET /parts/{id}/geometryurl][%d] getPartGeometryUrlForbidden  %+v", 403, o.Payload)
}

func (o *GetPartGeometryURLForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetPartGeometryURLNotFound creates a GetPartGeometryURLNotFound with default headers values
func NewGetPartGeometryURLNotFound() *GetPartGeometryURLNotFound {
	return &GetPartGeometryURLNotFound{}
}

/*GetPartGeometryURLNotFound handles this case with default header values.

Not Found
*/
type GetPartGeometryURLNotFound struct {
}

func (o *GetPartGeometryURLNotFound) Error() string {
	return fmt.Sprintf("[GET /parts/{id}/geometryurl][%d] getPartGeometryUrlNotFound ", 404)
}

func (o *GetPartGeometryURLNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewGetPartGeometryURLDefault creates a GetPartGeometryURLDefault with default headers values
func NewGetPartGeometryURLDefault(code int) *GetPartGeometryURLDefault {
	return &GetPartGeometryURLDefault{
		_statusCode: code,
	}
}

/*GetPartGeometryURLDefault handles this case with default header values.

unexpected error
*/
type GetPartGeometryURLDefault struct {
	_statusCode int

	Payload *models.Error
}

// Code gets the status code for the get part geometry Url default response
func (o *GetPartGeometryURLDefault) Code() int {
	return o._statusCode
}

func (o *GetPartGeometryURLDefault) Error() string {
	return fmt.Sprintf("[GET /parts/{id}/geometryurl][%d] getPartGeometryUrl default  %+v", o._statusCode, o.Payload)
}

func (o *GetPartGeometryURLDefault) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
