package operations

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"

	strfmt "github.com/go-openapi/strfmt"

	"github.com/3dsim/simulation-goclient/models"
)

// GetMaterialReader is a Reader for the GetMaterial structure.
type GetMaterialReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GetMaterialReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {

	case 200:
		result := NewGetMaterialOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil

	case 401:
		result := NewGetMaterialUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 403:
		result := NewGetMaterialForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 404:
		result := NewGetMaterialNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		result := NewGetMaterialDefault(response.Code())
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		if response.Code()/100 == 2 {
			return result, nil
		}
		return nil, result
	}
}

// NewGetMaterialOK creates a GetMaterialOK with default headers values
func NewGetMaterialOK() *GetMaterialOK {
	return &GetMaterialOK{}
}

/*GetMaterialOK handles this case with default header values.

material response
*/
type GetMaterialOK struct {
	Payload *models.Material
}

func (o *GetMaterialOK) Error() string {
	return fmt.Sprintf("[GET /materials/{id}][%d] getMaterialOK  %+v", 200, o.Payload)
}

func (o *GetMaterialOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Material)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetMaterialUnauthorized creates a GetMaterialUnauthorized with default headers values
func NewGetMaterialUnauthorized() *GetMaterialUnauthorized {
	return &GetMaterialUnauthorized{}
}

/*GetMaterialUnauthorized handles this case with default header values.

Not authorized
*/
type GetMaterialUnauthorized struct {
	Payload *models.Error
}

func (o *GetMaterialUnauthorized) Error() string {
	return fmt.Sprintf("[GET /materials/{id}][%d] getMaterialUnauthorized  %+v", 401, o.Payload)
}

func (o *GetMaterialUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetMaterialForbidden creates a GetMaterialForbidden with default headers values
func NewGetMaterialForbidden() *GetMaterialForbidden {
	return &GetMaterialForbidden{}
}

/*GetMaterialForbidden handles this case with default header values.

Forbidden
*/
type GetMaterialForbidden struct {
	Payload *models.Error
}

func (o *GetMaterialForbidden) Error() string {
	return fmt.Sprintf("[GET /materials/{id}][%d] getMaterialForbidden  %+v", 403, o.Payload)
}

func (o *GetMaterialForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetMaterialNotFound creates a GetMaterialNotFound with default headers values
func NewGetMaterialNotFound() *GetMaterialNotFound {
	return &GetMaterialNotFound{}
}

/*GetMaterialNotFound handles this case with default header values.

Material not found
*/
type GetMaterialNotFound struct {
}

func (o *GetMaterialNotFound) Error() string {
	return fmt.Sprintf("[GET /materials/{id}][%d] getMaterialNotFound ", 404)
}

func (o *GetMaterialNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewGetMaterialDefault creates a GetMaterialDefault with default headers values
func NewGetMaterialDefault(code int) *GetMaterialDefault {
	return &GetMaterialDefault{
		_statusCode: code,
	}
}

/*GetMaterialDefault handles this case with default header values.

unexpected error
*/
type GetMaterialDefault struct {
	_statusCode int

	Payload *models.Error
}

// Code gets the status code for the get material default response
func (o *GetMaterialDefault) Code() int {
	return o._statusCode
}

func (o *GetMaterialDefault) Error() string {
	return fmt.Sprintf("[GET /materials/{id}][%d] getMaterial default  %+v", o._statusCode, o.Payload)
}

func (o *GetMaterialDefault) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
