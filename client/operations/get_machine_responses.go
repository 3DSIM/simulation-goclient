package operations

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"

	strfmt "github.com/go-openapi/strfmt"

	"github.com/3dsim/simulation-goclient/models"
)

// GetMachineReader is a Reader for the GetMachine structure.
type GetMachineReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GetMachineReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {

	case 200:
		result := NewGetMachineOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil

	case 401:
		result := NewGetMachineUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 403:
		result := NewGetMachineForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 404:
		result := NewGetMachineNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		result := NewGetMachineDefault(response.Code())
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		if response.Code()/100 == 2 {
			return result, nil
		}
		return nil, result
	}
}

// NewGetMachineOK creates a GetMachineOK with default headers values
func NewGetMachineOK() *GetMachineOK {
	return &GetMachineOK{}
}

/*GetMachineOK handles this case with default header values.

Successfully retrieved the requested machine
*/
type GetMachineOK struct {
	Payload *models.Machine
}

func (o *GetMachineOK) Error() string {
	return fmt.Sprintf("[GET /machines/{id}][%d] getMachineOK  %+v", 200, o.Payload)
}

func (o *GetMachineOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Machine)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetMachineUnauthorized creates a GetMachineUnauthorized with default headers values
func NewGetMachineUnauthorized() *GetMachineUnauthorized {
	return &GetMachineUnauthorized{}
}

/*GetMachineUnauthorized handles this case with default header values.

Not authorized
*/
type GetMachineUnauthorized struct {
	Payload *models.Error
}

func (o *GetMachineUnauthorized) Error() string {
	return fmt.Sprintf("[GET /machines/{id}][%d] getMachineUnauthorized  %+v", 401, o.Payload)
}

func (o *GetMachineUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetMachineForbidden creates a GetMachineForbidden with default headers values
func NewGetMachineForbidden() *GetMachineForbidden {
	return &GetMachineForbidden{}
}

/*GetMachineForbidden handles this case with default header values.

Forbidden
*/
type GetMachineForbidden struct {
	Payload *models.Error
}

func (o *GetMachineForbidden) Error() string {
	return fmt.Sprintf("[GET /machines/{id}][%d] getMachineForbidden  %+v", 403, o.Payload)
}

func (o *GetMachineForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetMachineNotFound creates a GetMachineNotFound with default headers values
func NewGetMachineNotFound() *GetMachineNotFound {
	return &GetMachineNotFound{}
}

/*GetMachineNotFound handles this case with default header values.

Machine not found (id invalid)
*/
type GetMachineNotFound struct {
}

func (o *GetMachineNotFound) Error() string {
	return fmt.Sprintf("[GET /machines/{id}][%d] getMachineNotFound ", 404)
}

func (o *GetMachineNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewGetMachineDefault creates a GetMachineDefault with default headers values
func NewGetMachineDefault(code int) *GetMachineDefault {
	return &GetMachineDefault{
		_statusCode: code,
	}
}

/*GetMachineDefault handles this case with default header values.

unexpected error
*/
type GetMachineDefault struct {
	_statusCode int

	Payload *models.Error
}

// Code gets the status code for the get machine default response
func (o *GetMachineDefault) Code() int {
	return o._statusCode
}

func (o *GetMachineDefault) Error() string {
	return fmt.Sprintf("[GET /machines/{id}][%d] getMachine default  %+v", o._statusCode, o.Payload)
}

func (o *GetMachineDefault) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
