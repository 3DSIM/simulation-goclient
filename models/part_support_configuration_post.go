// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	strfmt "github.com/go-openapi/strfmt"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/swag"
	"github.com/go-openapi/validate"
)

// PartSupportConfigurationPost part support configuration post
// swagger:model PartSupportConfigurationPost
type PartSupportConfigurationPost struct {

	// Free form description of the configuration, max 2048 characters
	Description string `json:"description,omitempty"`

	// Name of the configuration, max 50 characters
	// Required: true
	Name *string `json:"name"`

	// Id of the part that owns this configuration
	// Required: true
	PartID *int32 `json:"partId"`

	// Ids for the part supports used in the configuration
	// Required: true
	PartSupportIds []int32 `json:"partSupportIds"`
}

// Validate validates this part support configuration post
func (m *PartSupportConfigurationPost) Validate(formats strfmt.Registry) error {
	var res []error

	if err := m.validateName(formats); err != nil {
		// prop
		res = append(res, err)
	}

	if err := m.validatePartID(formats); err != nil {
		// prop
		res = append(res, err)
	}

	if err := m.validatePartSupportIds(formats); err != nil {
		// prop
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (m *PartSupportConfigurationPost) validateName(formats strfmt.Registry) error {

	if err := validate.Required("name", "body", m.Name); err != nil {
		return err
	}

	return nil
}

func (m *PartSupportConfigurationPost) validatePartID(formats strfmt.Registry) error {

	if err := validate.Required("partId", "body", m.PartID); err != nil {
		return err
	}

	return nil
}

func (m *PartSupportConfigurationPost) validatePartSupportIds(formats strfmt.Registry) error {

	if err := validate.Required("partSupportIds", "body", m.PartSupportIds); err != nil {
		return err
	}

	return nil
}

// MarshalBinary interface implementation
func (m *PartSupportConfigurationPost) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *PartSupportConfigurationPost) UnmarshalBinary(b []byte) error {
	var res PartSupportConfigurationPost
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}
