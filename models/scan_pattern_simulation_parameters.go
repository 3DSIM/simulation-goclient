// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	strfmt "github.com/go-openapi/strfmt"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/swag"
	"github.com/go-openapi/validate"
)

// ScanPatternSimulationParameters scan pattern simulation parameters
// swagger:model ScanPatternSimulationParameters
type ScanPatternSimulationParameters struct {

	// anisotropic strain coefficients parallel
	// Required: true
	AnisotropicStrainCoefficientsParallel *float64 `json:"anisotropicStrainCoefficientsParallel"`

	// anisotropic strain coefficients perpendicular
	// Required: true
	AnisotropicStrainCoefficientsPerpendicular *float64 `json:"anisotropicStrainCoefficientsPerpendicular"`

	// anisotropic strain coefficients z
	// Required: true
	AnisotropicStrainCoefficientsZ *float64 `json:"anisotropicStrainCoefficientsZ"`

	// Must be between 0 to 180 degrees
	// Required: true
	// Maximum: 180
	// Minimum: 0
	LayerRotationAngle *float64 `json:"layerRotationAngle"`

	// Must be between 0.00001 to 0.0001 meters
	// Required: true
	// Maximum: 0.0001
	// Minimum: 1e-05
	LayerThickness *float64 `json:"layerThickness"`

	// output shrinkage
	// Required: true
	OutputShrinkage *bool `json:"outputShrinkage"`

	// Must be between 0 to 180 degrees
	// Required: true
	// Maximum: 180
	// Minimum: 0
	StartingLayerAngle *float64 `json:"startingLayerAngle"`
}

// Validate validates this scan pattern simulation parameters
func (m *ScanPatternSimulationParameters) Validate(formats strfmt.Registry) error {
	var res []error

	if err := m.validateAnisotropicStrainCoefficientsParallel(formats); err != nil {
		// prop
		res = append(res, err)
	}

	if err := m.validateAnisotropicStrainCoefficientsPerpendicular(formats); err != nil {
		// prop
		res = append(res, err)
	}

	if err := m.validateAnisotropicStrainCoefficientsZ(formats); err != nil {
		// prop
		res = append(res, err)
	}

	if err := m.validateLayerRotationAngle(formats); err != nil {
		// prop
		res = append(res, err)
	}

	if err := m.validateLayerThickness(formats); err != nil {
		// prop
		res = append(res, err)
	}

	if err := m.validateOutputShrinkage(formats); err != nil {
		// prop
		res = append(res, err)
	}

	if err := m.validateStartingLayerAngle(formats); err != nil {
		// prop
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (m *ScanPatternSimulationParameters) validateAnisotropicStrainCoefficientsParallel(formats strfmt.Registry) error {

	if err := validate.Required("anisotropicStrainCoefficientsParallel", "body", m.AnisotropicStrainCoefficientsParallel); err != nil {
		return err
	}

	return nil
}

func (m *ScanPatternSimulationParameters) validateAnisotropicStrainCoefficientsPerpendicular(formats strfmt.Registry) error {

	if err := validate.Required("anisotropicStrainCoefficientsPerpendicular", "body", m.AnisotropicStrainCoefficientsPerpendicular); err != nil {
		return err
	}

	return nil
}

func (m *ScanPatternSimulationParameters) validateAnisotropicStrainCoefficientsZ(formats strfmt.Registry) error {

	if err := validate.Required("anisotropicStrainCoefficientsZ", "body", m.AnisotropicStrainCoefficientsZ); err != nil {
		return err
	}

	return nil
}

func (m *ScanPatternSimulationParameters) validateLayerRotationAngle(formats strfmt.Registry) error {

	if err := validate.Required("layerRotationAngle", "body", m.LayerRotationAngle); err != nil {
		return err
	}

	if err := validate.Minimum("layerRotationAngle", "body", float64(*m.LayerRotationAngle), 0, false); err != nil {
		return err
	}

	if err := validate.Maximum("layerRotationAngle", "body", float64(*m.LayerRotationAngle), 180, false); err != nil {
		return err
	}

	return nil
}

func (m *ScanPatternSimulationParameters) validateLayerThickness(formats strfmt.Registry) error {

	if err := validate.Required("layerThickness", "body", m.LayerThickness); err != nil {
		return err
	}

	if err := validate.Minimum("layerThickness", "body", float64(*m.LayerThickness), 1e-05, false); err != nil {
		return err
	}

	if err := validate.Maximum("layerThickness", "body", float64(*m.LayerThickness), 0.0001, false); err != nil {
		return err
	}

	return nil
}

func (m *ScanPatternSimulationParameters) validateOutputShrinkage(formats strfmt.Registry) error {

	if err := validate.Required("outputShrinkage", "body", m.OutputShrinkage); err != nil {
		return err
	}

	return nil
}

func (m *ScanPatternSimulationParameters) validateStartingLayerAngle(formats strfmt.Registry) error {

	if err := validate.Required("startingLayerAngle", "body", m.StartingLayerAngle); err != nil {
		return err
	}

	if err := validate.Minimum("startingLayerAngle", "body", float64(*m.StartingLayerAngle), 0, false); err != nil {
		return err
	}

	if err := validate.Maximum("startingLayerAngle", "body", float64(*m.StartingLayerAngle), 180, false); err != nil {
		return err
	}

	return nil
}

// MarshalBinary interface implementation
func (m *ScanPatternSimulationParameters) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *ScanPatternSimulationParameters) UnmarshalBinary(b []byte) error {
	var res ScanPatternSimulationParameters
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}
