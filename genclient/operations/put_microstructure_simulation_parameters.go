// Code generated by go-swagger; DO NOT EDIT.

package operations

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"net/http"
	"time"

	"golang.org/x/net/context"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/runtime"
	cr "github.com/go-openapi/runtime/client"
	"github.com/go-openapi/swag"

	strfmt "github.com/go-openapi/strfmt"

	"github.com/3dsim/simulation-goclient/models"
)

// NewPutMicrostructureSimulationParams creates a new PutMicrostructureSimulationParams object
// with the default values initialized.
func NewPutMicrostructureSimulationParams() *PutMicrostructureSimulationParams {
	var ()
	return &PutMicrostructureSimulationParams{

		timeout: cr.DefaultTimeout,
	}
}

// NewPutMicrostructureSimulationParamsWithTimeout creates a new PutMicrostructureSimulationParams object
// with the default values initialized, and the ability to set a timeout on a request
func NewPutMicrostructureSimulationParamsWithTimeout(timeout time.Duration) *PutMicrostructureSimulationParams {
	var ()
	return &PutMicrostructureSimulationParams{

		timeout: timeout,
	}
}

// NewPutMicrostructureSimulationParamsWithContext creates a new PutMicrostructureSimulationParams object
// with the default values initialized, and the ability to set a context for a request
func NewPutMicrostructureSimulationParamsWithContext(ctx context.Context) *PutMicrostructureSimulationParams {
	var ()
	return &PutMicrostructureSimulationParams{

		Context: ctx,
	}
}

// NewPutMicrostructureSimulationParamsWithHTTPClient creates a new PutMicrostructureSimulationParams object
// with the default values initialized, and the ability to set a custom HTTPClient for a request
func NewPutMicrostructureSimulationParamsWithHTTPClient(client *http.Client) *PutMicrostructureSimulationParams {
	var ()
	return &PutMicrostructureSimulationParams{
		HTTPClient: client,
	}
}

/*PutMicrostructureSimulationParams contains all the parameters to send to the API endpoint
for the put microstructure simulation operation typically these are written to a http.Request
*/
type PutMicrostructureSimulationParams struct {

	/*MicrostructureSimulation
	  MicrostructureSimulation fields required to update a simulation

	*/
	MicrostructureSimulation *models.MicrostructureSimulation
	/*ID
	  simulation identifier

	*/
	ID int32

	timeout    time.Duration
	Context    context.Context
	HTTPClient *http.Client
}

// WithTimeout adds the timeout to the put microstructure simulation params
func (o *PutMicrostructureSimulationParams) WithTimeout(timeout time.Duration) *PutMicrostructureSimulationParams {
	o.SetTimeout(timeout)
	return o
}

// SetTimeout adds the timeout to the put microstructure simulation params
func (o *PutMicrostructureSimulationParams) SetTimeout(timeout time.Duration) {
	o.timeout = timeout
}

// WithContext adds the context to the put microstructure simulation params
func (o *PutMicrostructureSimulationParams) WithContext(ctx context.Context) *PutMicrostructureSimulationParams {
	o.SetContext(ctx)
	return o
}

// SetContext adds the context to the put microstructure simulation params
func (o *PutMicrostructureSimulationParams) SetContext(ctx context.Context) {
	o.Context = ctx
}

// WithHTTPClient adds the HTTPClient to the put microstructure simulation params
func (o *PutMicrostructureSimulationParams) WithHTTPClient(client *http.Client) *PutMicrostructureSimulationParams {
	o.SetHTTPClient(client)
	return o
}

// SetHTTPClient adds the HTTPClient to the put microstructure simulation params
func (o *PutMicrostructureSimulationParams) SetHTTPClient(client *http.Client) {
	o.HTTPClient = client
}

// WithMicrostructureSimulation adds the microstructureSimulation to the put microstructure simulation params
func (o *PutMicrostructureSimulationParams) WithMicrostructureSimulation(microstructureSimulation *models.MicrostructureSimulation) *PutMicrostructureSimulationParams {
	o.SetMicrostructureSimulation(microstructureSimulation)
	return o
}

// SetMicrostructureSimulation adds the microstructureSimulation to the put microstructure simulation params
func (o *PutMicrostructureSimulationParams) SetMicrostructureSimulation(microstructureSimulation *models.MicrostructureSimulation) {
	o.MicrostructureSimulation = microstructureSimulation
}

// WithID adds the id to the put microstructure simulation params
func (o *PutMicrostructureSimulationParams) WithID(id int32) *PutMicrostructureSimulationParams {
	o.SetID(id)
	return o
}

// SetID adds the id to the put microstructure simulation params
func (o *PutMicrostructureSimulationParams) SetID(id int32) {
	o.ID = id
}

// WriteToRequest writes these params to a swagger request
func (o *PutMicrostructureSimulationParams) WriteToRequest(r runtime.ClientRequest, reg strfmt.Registry) error {

	if err := r.SetTimeout(o.timeout); err != nil {
		return err
	}
	var res []error

	if o.MicrostructureSimulation == nil {
		o.MicrostructureSimulation = new(models.MicrostructureSimulation)
	}

	if err := r.SetBodyParam(o.MicrostructureSimulation); err != nil {
		return err
	}

	// path param id
	if err := r.SetPathParam("id", swag.FormatInt32(o.ID)); err != nil {
		return err
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}
