package operations

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"

	strfmt "github.com/go-openapi/strfmt"

	"github.com/3dsim/simulation-goclient/models"
)

// PostSimulationLogReader is a Reader for the PostSimulationLog structure.
type PostSimulationLogReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *PostSimulationLogReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {

	case 200:
		result := NewPostSimulationLogOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil

	case 401:
		result := NewPostSimulationLogUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 403:
		result := NewPostSimulationLogForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		result := NewPostSimulationLogDefault(response.Code())
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		if response.Code()/100 == 2 {
			return result, nil
		}
		return nil, result
	}
}

// NewPostSimulationLogOK creates a PostSimulationLogOK with default headers values
func NewPostSimulationLogOK() *PostSimulationLogOK {
	return &PostSimulationLogOK{}
}

/*PostSimulationLogOK handles this case with default header values.

Successfully added the item
*/
type PostSimulationLogOK struct {
	Payload *models.SimulationLog
}

func (o *PostSimulationLogOK) Error() string {
	return fmt.Sprintf("[POST /simulations/{id}/logs][%d] postSimulationLogOK  %+v", 200, o.Payload)
}

func (o *PostSimulationLogOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.SimulationLog)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPostSimulationLogUnauthorized creates a PostSimulationLogUnauthorized with default headers values
func NewPostSimulationLogUnauthorized() *PostSimulationLogUnauthorized {
	return &PostSimulationLogUnauthorized{}
}

/*PostSimulationLogUnauthorized handles this case with default header values.

Not authorized
*/
type PostSimulationLogUnauthorized struct {
	Payload *models.Error
}

func (o *PostSimulationLogUnauthorized) Error() string {
	return fmt.Sprintf("[POST /simulations/{id}/logs][%d] postSimulationLogUnauthorized  %+v", 401, o.Payload)
}

func (o *PostSimulationLogUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPostSimulationLogForbidden creates a PostSimulationLogForbidden with default headers values
func NewPostSimulationLogForbidden() *PostSimulationLogForbidden {
	return &PostSimulationLogForbidden{}
}

/*PostSimulationLogForbidden handles this case with default header values.

Forbidden
*/
type PostSimulationLogForbidden struct {
	Payload *models.Error
}

func (o *PostSimulationLogForbidden) Error() string {
	return fmt.Sprintf("[POST /simulations/{id}/logs][%d] postSimulationLogForbidden  %+v", 403, o.Payload)
}

func (o *PostSimulationLogForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPostSimulationLogDefault creates a PostSimulationLogDefault with default headers values
func NewPostSimulationLogDefault(code int) *PostSimulationLogDefault {
	return &PostSimulationLogDefault{
		_statusCode: code,
	}
}

/*PostSimulationLogDefault handles this case with default header values.

unexpected error
*/
type PostSimulationLogDefault struct {
	_statusCode int

	Payload *models.Error
}

// Code gets the status code for the post simulation log default response
func (o *PostSimulationLogDefault) Code() int {
	return o._statusCode
}

func (o *PostSimulationLogDefault) Error() string {
	return fmt.Sprintf("[POST /simulations/{id}/logs][%d] postSimulationLog default  %+v", o._statusCode, o.Payload)
}

func (o *PostSimulationLogDefault) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
