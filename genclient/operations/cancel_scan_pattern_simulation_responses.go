// Code generated by go-swagger; DO NOT EDIT.

package operations

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"

	strfmt "github.com/go-openapi/strfmt"

	"github.com/3dsim/simulation-goclient/models"
)

// CancelScanPatternSimulationReader is a Reader for the CancelScanPatternSimulation structure.
type CancelScanPatternSimulationReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *CancelScanPatternSimulationReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {

	case 200:
		result := NewCancelScanPatternSimulationOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil

	case 401:
		result := NewCancelScanPatternSimulationUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 403:
		result := NewCancelScanPatternSimulationForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 404:
		result := NewCancelScanPatternSimulationNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		result := NewCancelScanPatternSimulationDefault(response.Code())
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		if response.Code()/100 == 2 {
			return result, nil
		}
		return nil, result
	}
}

// NewCancelScanPatternSimulationOK creates a CancelScanPatternSimulationOK with default headers values
func NewCancelScanPatternSimulationOK() *CancelScanPatternSimulationOK {
	return &CancelScanPatternSimulationOK{}
}

/*CancelScanPatternSimulationOK handles this case with default header values.

Simulation was successfully cancelled.
*/
type CancelScanPatternSimulationOK struct {
}

func (o *CancelScanPatternSimulationOK) Error() string {
	return fmt.Sprintf("[PUT /scanpatternsimulations/{id}/cancel][%d] cancelScanPatternSimulationOK ", 200)
}

func (o *CancelScanPatternSimulationOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewCancelScanPatternSimulationUnauthorized creates a CancelScanPatternSimulationUnauthorized with default headers values
func NewCancelScanPatternSimulationUnauthorized() *CancelScanPatternSimulationUnauthorized {
	return &CancelScanPatternSimulationUnauthorized{}
}

/*CancelScanPatternSimulationUnauthorized handles this case with default header values.

Not authorized
*/
type CancelScanPatternSimulationUnauthorized struct {
	Payload *models.Error
}

func (o *CancelScanPatternSimulationUnauthorized) Error() string {
	return fmt.Sprintf("[PUT /scanpatternsimulations/{id}/cancel][%d] cancelScanPatternSimulationUnauthorized  %+v", 401, o.Payload)
}

func (o *CancelScanPatternSimulationUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewCancelScanPatternSimulationForbidden creates a CancelScanPatternSimulationForbidden with default headers values
func NewCancelScanPatternSimulationForbidden() *CancelScanPatternSimulationForbidden {
	return &CancelScanPatternSimulationForbidden{}
}

/*CancelScanPatternSimulationForbidden handles this case with default header values.

Forbidden
*/
type CancelScanPatternSimulationForbidden struct {
	Payload *models.Error
}

func (o *CancelScanPatternSimulationForbidden) Error() string {
	return fmt.Sprintf("[PUT /scanpatternsimulations/{id}/cancel][%d] cancelScanPatternSimulationForbidden  %+v", 403, o.Payload)
}

func (o *CancelScanPatternSimulationForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewCancelScanPatternSimulationNotFound creates a CancelScanPatternSimulationNotFound with default headers values
func NewCancelScanPatternSimulationNotFound() *CancelScanPatternSimulationNotFound {
	return &CancelScanPatternSimulationNotFound{}
}

/*CancelScanPatternSimulationNotFound handles this case with default header values.

Simulation not found (id invalid)
*/
type CancelScanPatternSimulationNotFound struct {
	Payload *models.Error
}

func (o *CancelScanPatternSimulationNotFound) Error() string {
	return fmt.Sprintf("[PUT /scanpatternsimulations/{id}/cancel][%d] cancelScanPatternSimulationNotFound  %+v", 404, o.Payload)
}

func (o *CancelScanPatternSimulationNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewCancelScanPatternSimulationDefault creates a CancelScanPatternSimulationDefault with default headers values
func NewCancelScanPatternSimulationDefault(code int) *CancelScanPatternSimulationDefault {
	return &CancelScanPatternSimulationDefault{
		_statusCode: code,
	}
}

/*CancelScanPatternSimulationDefault handles this case with default header values.

unexpected error
*/
type CancelScanPatternSimulationDefault struct {
	_statusCode int

	Payload *models.Error
}

// Code gets the status code for the cancel scan pattern simulation default response
func (o *CancelScanPatternSimulationDefault) Code() int {
	return o._statusCode
}

func (o *CancelScanPatternSimulationDefault) Error() string {
	return fmt.Sprintf("[PUT /scanpatternsimulations/{id}/cancel][%d] cancelScanPatternSimulation default  %+v", o._statusCode, o.Payload)
}

func (o *CancelScanPatternSimulationDefault) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
