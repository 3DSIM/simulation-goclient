// Code generated by go-swagger; DO NOT EDIT.

package operations

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"

	strfmt "github.com/go-openapi/strfmt"

	"github.com/3dsim/simulation-goclient/models"
)

// PostBuildFileReader is a Reader for the PostBuildFile structure.
type PostBuildFileReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *PostBuildFileReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {

	case 200:
		result := NewPostBuildFileOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil

	case 401:
		result := NewPostBuildFileUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 403:
		result := NewPostBuildFileForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		result := NewPostBuildFileDefault(response.Code())
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		if response.Code()/100 == 2 {
			return result, nil
		}
		return nil, result
	}
}

// NewPostBuildFileOK creates a PostBuildFileOK with default headers values
func NewPostBuildFileOK() *PostBuildFileOK {
	return &PostBuildFileOK{}
}

/*PostBuildFileOK handles this case with default header values.

Build file that was successfully added
*/
type PostBuildFileOK struct {
	Payload *models.BuildFile
}

func (o *PostBuildFileOK) Error() string {
	return fmt.Sprintf("[POST /buildfiles][%d] postBuildFileOK  %+v", 200, o.Payload)
}

func (o *PostBuildFileOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.BuildFile)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPostBuildFileUnauthorized creates a PostBuildFileUnauthorized with default headers values
func NewPostBuildFileUnauthorized() *PostBuildFileUnauthorized {
	return &PostBuildFileUnauthorized{}
}

/*PostBuildFileUnauthorized handles this case with default header values.

Not authorized
*/
type PostBuildFileUnauthorized struct {
	Payload *models.Error
}

func (o *PostBuildFileUnauthorized) Error() string {
	return fmt.Sprintf("[POST /buildfiles][%d] postBuildFileUnauthorized  %+v", 401, o.Payload)
}

func (o *PostBuildFileUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPostBuildFileForbidden creates a PostBuildFileForbidden with default headers values
func NewPostBuildFileForbidden() *PostBuildFileForbidden {
	return &PostBuildFileForbidden{}
}

/*PostBuildFileForbidden handles this case with default header values.

Forbidden
*/
type PostBuildFileForbidden struct {
	Payload *models.Error
}

func (o *PostBuildFileForbidden) Error() string {
	return fmt.Sprintf("[POST /buildfiles][%d] postBuildFileForbidden  %+v", 403, o.Payload)
}

func (o *PostBuildFileForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPostBuildFileDefault creates a PostBuildFileDefault with default headers values
func NewPostBuildFileDefault(code int) *PostBuildFileDefault {
	return &PostBuildFileDefault{
		_statusCode: code,
	}
}

/*PostBuildFileDefault handles this case with default header values.

unexpected error
*/
type PostBuildFileDefault struct {
	_statusCode int

	Payload *models.Error
}

// Code gets the status code for the post build file default response
func (o *PostBuildFileDefault) Code() int {
	return o._statusCode
}

func (o *PostBuildFileDefault) Error() string {
	return fmt.Sprintf("[POST /buildfiles][%d] postBuildFile default  %+v", o._statusCode, o.Payload)
}

func (o *PostBuildFileDefault) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
