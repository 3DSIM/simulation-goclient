// Code generated by go-swagger; DO NOT EDIT.

package operations

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"

	strfmt "github.com/go-openapi/strfmt"

	"github.com/3dsim/simulation-goclient/models"
)

// DeleteAssumedStrainSimulationReader is a Reader for the DeleteAssumedStrainSimulation structure.
type DeleteAssumedStrainSimulationReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *DeleteAssumedStrainSimulationReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {

	case 200:
		result := NewDeleteAssumedStrainSimulationOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil

	case 401:
		result := NewDeleteAssumedStrainSimulationUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 403:
		result := NewDeleteAssumedStrainSimulationForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 404:
		result := NewDeleteAssumedStrainSimulationNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		result := NewDeleteAssumedStrainSimulationDefault(response.Code())
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		if response.Code()/100 == 2 {
			return result, nil
		}
		return nil, result
	}
}

// NewDeleteAssumedStrainSimulationOK creates a DeleteAssumedStrainSimulationOK with default headers values
func NewDeleteAssumedStrainSimulationOK() *DeleteAssumedStrainSimulationOK {
	return &DeleteAssumedStrainSimulationOK{}
}

/*DeleteAssumedStrainSimulationOK handles this case with default header values.

Successfully deleted a simulation
*/
type DeleteAssumedStrainSimulationOK struct {
}

func (o *DeleteAssumedStrainSimulationOK) Error() string {
	return fmt.Sprintf("[DELETE /assumedstrainsimulations/{id}][%d] deleteAssumedStrainSimulationOK ", 200)
}

func (o *DeleteAssumedStrainSimulationOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewDeleteAssumedStrainSimulationUnauthorized creates a DeleteAssumedStrainSimulationUnauthorized with default headers values
func NewDeleteAssumedStrainSimulationUnauthorized() *DeleteAssumedStrainSimulationUnauthorized {
	return &DeleteAssumedStrainSimulationUnauthorized{}
}

/*DeleteAssumedStrainSimulationUnauthorized handles this case with default header values.

Not authorized
*/
type DeleteAssumedStrainSimulationUnauthorized struct {
	Payload *models.Error
}

func (o *DeleteAssumedStrainSimulationUnauthorized) Error() string {
	return fmt.Sprintf("[DELETE /assumedstrainsimulations/{id}][%d] deleteAssumedStrainSimulationUnauthorized  %+v", 401, o.Payload)
}

func (o *DeleteAssumedStrainSimulationUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewDeleteAssumedStrainSimulationForbidden creates a DeleteAssumedStrainSimulationForbidden with default headers values
func NewDeleteAssumedStrainSimulationForbidden() *DeleteAssumedStrainSimulationForbidden {
	return &DeleteAssumedStrainSimulationForbidden{}
}

/*DeleteAssumedStrainSimulationForbidden handles this case with default header values.

Forbidden
*/
type DeleteAssumedStrainSimulationForbidden struct {
	Payload *models.Error
}

func (o *DeleteAssumedStrainSimulationForbidden) Error() string {
	return fmt.Sprintf("[DELETE /assumedstrainsimulations/{id}][%d] deleteAssumedStrainSimulationForbidden  %+v", 403, o.Payload)
}

func (o *DeleteAssumedStrainSimulationForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewDeleteAssumedStrainSimulationNotFound creates a DeleteAssumedStrainSimulationNotFound with default headers values
func NewDeleteAssumedStrainSimulationNotFound() *DeleteAssumedStrainSimulationNotFound {
	return &DeleteAssumedStrainSimulationNotFound{}
}

/*DeleteAssumedStrainSimulationNotFound handles this case with default header values.

Not Found
*/
type DeleteAssumedStrainSimulationNotFound struct {
}

func (o *DeleteAssumedStrainSimulationNotFound) Error() string {
	return fmt.Sprintf("[DELETE /assumedstrainsimulations/{id}][%d] deleteAssumedStrainSimulationNotFound ", 404)
}

func (o *DeleteAssumedStrainSimulationNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewDeleteAssumedStrainSimulationDefault creates a DeleteAssumedStrainSimulationDefault with default headers values
func NewDeleteAssumedStrainSimulationDefault(code int) *DeleteAssumedStrainSimulationDefault {
	return &DeleteAssumedStrainSimulationDefault{
		_statusCode: code,
	}
}

/*DeleteAssumedStrainSimulationDefault handles this case with default header values.

unexpected error
*/
type DeleteAssumedStrainSimulationDefault struct {
	_statusCode int

	Payload *models.Error
}

// Code gets the status code for the delete assumed strain simulation default response
func (o *DeleteAssumedStrainSimulationDefault) Code() int {
	return o._statusCode
}

func (o *DeleteAssumedStrainSimulationDefault) Error() string {
	return fmt.Sprintf("[DELETE /assumedstrainsimulations/{id}][%d] DeleteAssumedStrainSimulation default  %+v", o._statusCode, o.Payload)
}

func (o *DeleteAssumedStrainSimulationDefault) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
