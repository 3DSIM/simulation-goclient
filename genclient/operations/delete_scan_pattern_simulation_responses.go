// Code generated by go-swagger; DO NOT EDIT.

package operations

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"

	strfmt "github.com/go-openapi/strfmt"

	"github.com/3dsim/simulation-goclient/models"
)

// DeleteScanPatternSimulationReader is a Reader for the DeleteScanPatternSimulation structure.
type DeleteScanPatternSimulationReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *DeleteScanPatternSimulationReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {

	case 200:
		result := NewDeleteScanPatternSimulationOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil

	case 401:
		result := NewDeleteScanPatternSimulationUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 403:
		result := NewDeleteScanPatternSimulationForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 404:
		result := NewDeleteScanPatternSimulationNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		result := NewDeleteScanPatternSimulationDefault(response.Code())
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		if response.Code()/100 == 2 {
			return result, nil
		}
		return nil, result
	}
}

// NewDeleteScanPatternSimulationOK creates a DeleteScanPatternSimulationOK with default headers values
func NewDeleteScanPatternSimulationOK() *DeleteScanPatternSimulationOK {
	return &DeleteScanPatternSimulationOK{}
}

/*DeleteScanPatternSimulationOK handles this case with default header values.

Successfully deleted a simulation
*/
type DeleteScanPatternSimulationOK struct {
}

func (o *DeleteScanPatternSimulationOK) Error() string {
	return fmt.Sprintf("[DELETE /scanpatternsimulations/{id}][%d] deleteScanPatternSimulationOK ", 200)
}

func (o *DeleteScanPatternSimulationOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewDeleteScanPatternSimulationUnauthorized creates a DeleteScanPatternSimulationUnauthorized with default headers values
func NewDeleteScanPatternSimulationUnauthorized() *DeleteScanPatternSimulationUnauthorized {
	return &DeleteScanPatternSimulationUnauthorized{}
}

/*DeleteScanPatternSimulationUnauthorized handles this case with default header values.

Not authorized
*/
type DeleteScanPatternSimulationUnauthorized struct {
	Payload *models.Error
}

func (o *DeleteScanPatternSimulationUnauthorized) Error() string {
	return fmt.Sprintf("[DELETE /scanpatternsimulations/{id}][%d] deleteScanPatternSimulationUnauthorized  %+v", 401, o.Payload)
}

func (o *DeleteScanPatternSimulationUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewDeleteScanPatternSimulationForbidden creates a DeleteScanPatternSimulationForbidden with default headers values
func NewDeleteScanPatternSimulationForbidden() *DeleteScanPatternSimulationForbidden {
	return &DeleteScanPatternSimulationForbidden{}
}

/*DeleteScanPatternSimulationForbidden handles this case with default header values.

Forbidden
*/
type DeleteScanPatternSimulationForbidden struct {
	Payload *models.Error
}

func (o *DeleteScanPatternSimulationForbidden) Error() string {
	return fmt.Sprintf("[DELETE /scanpatternsimulations/{id}][%d] deleteScanPatternSimulationForbidden  %+v", 403, o.Payload)
}

func (o *DeleteScanPatternSimulationForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewDeleteScanPatternSimulationNotFound creates a DeleteScanPatternSimulationNotFound with default headers values
func NewDeleteScanPatternSimulationNotFound() *DeleteScanPatternSimulationNotFound {
	return &DeleteScanPatternSimulationNotFound{}
}

/*DeleteScanPatternSimulationNotFound handles this case with default header values.

Not Found
*/
type DeleteScanPatternSimulationNotFound struct {
}

func (o *DeleteScanPatternSimulationNotFound) Error() string {
	return fmt.Sprintf("[DELETE /scanpatternsimulations/{id}][%d] deleteScanPatternSimulationNotFound ", 404)
}

func (o *DeleteScanPatternSimulationNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewDeleteScanPatternSimulationDefault creates a DeleteScanPatternSimulationDefault with default headers values
func NewDeleteScanPatternSimulationDefault(code int) *DeleteScanPatternSimulationDefault {
	return &DeleteScanPatternSimulationDefault{
		_statusCode: code,
	}
}

/*DeleteScanPatternSimulationDefault handles this case with default header values.

unexpected error
*/
type DeleteScanPatternSimulationDefault struct {
	_statusCode int

	Payload *models.Error
}

// Code gets the status code for the delete scan pattern simulation default response
func (o *DeleteScanPatternSimulationDefault) Code() int {
	return o._statusCode
}

func (o *DeleteScanPatternSimulationDefault) Error() string {
	return fmt.Sprintf("[DELETE /scanpatternsimulations/{id}][%d] DeleteScanPatternSimulation default  %+v", o._statusCode, o.Payload)
}

func (o *DeleteScanPatternSimulationDefault) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
