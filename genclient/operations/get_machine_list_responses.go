package operations

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"

	strfmt "github.com/go-openapi/strfmt"

	"github.com/3dsim/simulation-goclient/models"
)

// GetMachineListReader is a Reader for the GetMachineList structure.
type GetMachineListReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GetMachineListReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {

	case 200:
		result := NewGetMachineListOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil

	case 401:
		result := NewGetMachineListUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 403:
		result := NewGetMachineListForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		result := NewGetMachineListDefault(response.Code())
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		if response.Code()/100 == 2 {
			return result, nil
		}
		return nil, result
	}
}

// NewGetMachineListOK creates a GetMachineListOK with default headers values
func NewGetMachineListOK() *GetMachineListOK {
	return &GetMachineListOK{}
}

/*GetMachineListOK handles this case with default header values.

Successfully retrieved list of machines
*/
type GetMachineListOK struct {
	Payload []*models.Machine
}

func (o *GetMachineListOK) Error() string {
	return fmt.Sprintf("[GET /machines][%d] getMachineListOK  %+v", 200, o.Payload)
}

func (o *GetMachineListOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetMachineListUnauthorized creates a GetMachineListUnauthorized with default headers values
func NewGetMachineListUnauthorized() *GetMachineListUnauthorized {
	return &GetMachineListUnauthorized{}
}

/*GetMachineListUnauthorized handles this case with default header values.

Not authorized
*/
type GetMachineListUnauthorized struct {
	Payload *models.Error
}

func (o *GetMachineListUnauthorized) Error() string {
	return fmt.Sprintf("[GET /machines][%d] getMachineListUnauthorized  %+v", 401, o.Payload)
}

func (o *GetMachineListUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetMachineListForbidden creates a GetMachineListForbidden with default headers values
func NewGetMachineListForbidden() *GetMachineListForbidden {
	return &GetMachineListForbidden{}
}

/*GetMachineListForbidden handles this case with default header values.

Forbidden
*/
type GetMachineListForbidden struct {
	Payload *models.Error
}

func (o *GetMachineListForbidden) Error() string {
	return fmt.Sprintf("[GET /machines][%d] getMachineListForbidden  %+v", 403, o.Payload)
}

func (o *GetMachineListForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetMachineListDefault creates a GetMachineListDefault with default headers values
func NewGetMachineListDefault(code int) *GetMachineListDefault {
	return &GetMachineListDefault{
		_statusCode: code,
	}
}

/*GetMachineListDefault handles this case with default header values.

unexpected error
*/
type GetMachineListDefault struct {
	_statusCode int

	Payload *models.Error
}

// Code gets the status code for the get machine list default response
func (o *GetMachineListDefault) Code() int {
	return o._statusCode
}

func (o *GetMachineListDefault) Error() string {
	return fmt.Sprintf("[GET /machines][%d] getMachineList default  %+v", o._statusCode, o.Payload)
}

func (o *GetMachineListDefault) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
