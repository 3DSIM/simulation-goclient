package operations

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"

	strfmt "github.com/go-openapi/strfmt"

	"github.com/3dsim/simulation-goclient/models"
)

// AddBuildFileReader is a Reader for the AddBuildFile structure.
type AddBuildFileReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *AddBuildFileReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {

	case 200:
		result := NewAddBuildFileOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil

	case 401:
		result := NewAddBuildFileUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 403:
		result := NewAddBuildFileForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		result := NewAddBuildFileDefault(response.Code())
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		if response.Code()/100 == 2 {
			return result, nil
		}
		return nil, result
	}
}

// NewAddBuildFileOK creates a AddBuildFileOK with default headers values
func NewAddBuildFileOK() *AddBuildFileOK {
	return &AddBuildFileOK{}
}

/*AddBuildFileOK handles this case with default header values.

Build file that was successfully added
*/
type AddBuildFileOK struct {
	Payload *models.BuildFile
}

func (o *AddBuildFileOK) Error() string {
	return fmt.Sprintf("[POST /buildfiles][%d] addBuildFileOK  %+v", 200, o.Payload)
}

func (o *AddBuildFileOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.BuildFile)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewAddBuildFileUnauthorized creates a AddBuildFileUnauthorized with default headers values
func NewAddBuildFileUnauthorized() *AddBuildFileUnauthorized {
	return &AddBuildFileUnauthorized{}
}

/*AddBuildFileUnauthorized handles this case with default header values.

Not authorized
*/
type AddBuildFileUnauthorized struct {
	Payload *models.Error
}

func (o *AddBuildFileUnauthorized) Error() string {
	return fmt.Sprintf("[POST /buildfiles][%d] addBuildFileUnauthorized  %+v", 401, o.Payload)
}

func (o *AddBuildFileUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewAddBuildFileForbidden creates a AddBuildFileForbidden with default headers values
func NewAddBuildFileForbidden() *AddBuildFileForbidden {
	return &AddBuildFileForbidden{}
}

/*AddBuildFileForbidden handles this case with default header values.

Forbidden
*/
type AddBuildFileForbidden struct {
	Payload *models.Error
}

func (o *AddBuildFileForbidden) Error() string {
	return fmt.Sprintf("[POST /buildfiles][%d] addBuildFileForbidden  %+v", 403, o.Payload)
}

func (o *AddBuildFileForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewAddBuildFileDefault creates a AddBuildFileDefault with default headers values
func NewAddBuildFileDefault(code int) *AddBuildFileDefault {
	return &AddBuildFileDefault{
		_statusCode: code,
	}
}

/*AddBuildFileDefault handles this case with default header values.

unexpected error
*/
type AddBuildFileDefault struct {
	_statusCode int

	Payload *models.Error
}

// Code gets the status code for the add build file default response
func (o *AddBuildFileDefault) Code() int {
	return o._statusCode
}

func (o *AddBuildFileDefault) Error() string {
	return fmt.Sprintf("[POST /buildfiles][%d] addBuildFile default  %+v", o._statusCode, o.Payload)
}

func (o *AddBuildFileDefault) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
