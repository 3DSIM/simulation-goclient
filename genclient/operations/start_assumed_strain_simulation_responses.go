// Code generated by go-swagger; DO NOT EDIT.

package operations

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"

	strfmt "github.com/go-openapi/strfmt"

	"github.com/3dsim/simulation-goclient/models"
)

// StartAssumedStrainSimulationReader is a Reader for the StartAssumedStrainSimulation structure.
type StartAssumedStrainSimulationReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *StartAssumedStrainSimulationReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {

	case 200:
		result := NewStartAssumedStrainSimulationOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil

	case 401:
		result := NewStartAssumedStrainSimulationUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 403:
		result := NewStartAssumedStrainSimulationForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 404:
		result := NewStartAssumedStrainSimulationNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		result := NewStartAssumedStrainSimulationDefault(response.Code())
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		if response.Code()/100 == 2 {
			return result, nil
		}
		return nil, result
	}
}

// NewStartAssumedStrainSimulationOK creates a StartAssumedStrainSimulationOK with default headers values
func NewStartAssumedStrainSimulationOK() *StartAssumedStrainSimulationOK {
	return &StartAssumedStrainSimulationOK{}
}

/*StartAssumedStrainSimulationOK handles this case with default header values.

Simulation was successfully started.
*/
type StartAssumedStrainSimulationOK struct {
}

func (o *StartAssumedStrainSimulationOK) Error() string {
	return fmt.Sprintf("[PUT /assumedstrainsimulations/{id}/start][%d] startAssumedStrainSimulationOK ", 200)
}

func (o *StartAssumedStrainSimulationOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewStartAssumedStrainSimulationUnauthorized creates a StartAssumedStrainSimulationUnauthorized with default headers values
func NewStartAssumedStrainSimulationUnauthorized() *StartAssumedStrainSimulationUnauthorized {
	return &StartAssumedStrainSimulationUnauthorized{}
}

/*StartAssumedStrainSimulationUnauthorized handles this case with default header values.

Not authorized
*/
type StartAssumedStrainSimulationUnauthorized struct {
	Payload *models.Error
}

func (o *StartAssumedStrainSimulationUnauthorized) Error() string {
	return fmt.Sprintf("[PUT /assumedstrainsimulations/{id}/start][%d] startAssumedStrainSimulationUnauthorized  %+v", 401, o.Payload)
}

func (o *StartAssumedStrainSimulationUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewStartAssumedStrainSimulationForbidden creates a StartAssumedStrainSimulationForbidden with default headers values
func NewStartAssumedStrainSimulationForbidden() *StartAssumedStrainSimulationForbidden {
	return &StartAssumedStrainSimulationForbidden{}
}

/*StartAssumedStrainSimulationForbidden handles this case with default header values.

Forbidden
*/
type StartAssumedStrainSimulationForbidden struct {
	Payload *models.Error
}

func (o *StartAssumedStrainSimulationForbidden) Error() string {
	return fmt.Sprintf("[PUT /assumedstrainsimulations/{id}/start][%d] startAssumedStrainSimulationForbidden  %+v", 403, o.Payload)
}

func (o *StartAssumedStrainSimulationForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewStartAssumedStrainSimulationNotFound creates a StartAssumedStrainSimulationNotFound with default headers values
func NewStartAssumedStrainSimulationNotFound() *StartAssumedStrainSimulationNotFound {
	return &StartAssumedStrainSimulationNotFound{}
}

/*StartAssumedStrainSimulationNotFound handles this case with default header values.

Simulation not found (id invalid)
*/
type StartAssumedStrainSimulationNotFound struct {
	Payload *models.Error
}

func (o *StartAssumedStrainSimulationNotFound) Error() string {
	return fmt.Sprintf("[PUT /assumedstrainsimulations/{id}/start][%d] startAssumedStrainSimulationNotFound  %+v", 404, o.Payload)
}

func (o *StartAssumedStrainSimulationNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewStartAssumedStrainSimulationDefault creates a StartAssumedStrainSimulationDefault with default headers values
func NewStartAssumedStrainSimulationDefault(code int) *StartAssumedStrainSimulationDefault {
	return &StartAssumedStrainSimulationDefault{
		_statusCode: code,
	}
}

/*StartAssumedStrainSimulationDefault handles this case with default header values.

unexpected error
*/
type StartAssumedStrainSimulationDefault struct {
	_statusCode int

	Payload *models.Error
}

// Code gets the status code for the start assumed strain simulation default response
func (o *StartAssumedStrainSimulationDefault) Code() int {
	return o._statusCode
}

func (o *StartAssumedStrainSimulationDefault) Error() string {
	return fmt.Sprintf("[PUT /assumedstrainsimulations/{id}/start][%d] startAssumedStrainSimulation default  %+v", o._statusCode, o.Payload)
}

func (o *StartAssumedStrainSimulationDefault) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
