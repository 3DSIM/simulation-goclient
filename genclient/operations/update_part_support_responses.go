// Code generated by go-swagger; DO NOT EDIT.

package operations

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"

	strfmt "github.com/go-openapi/strfmt"

	"github.com/3dsim/simulation-goclient/models"
)

// UpdatePartSupportReader is a Reader for the UpdatePartSupport structure.
type UpdatePartSupportReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *UpdatePartSupportReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {

	case 200:
		result := NewUpdatePartSupportOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil

	case 403:
		result := NewUpdatePartSupportForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		result := NewUpdatePartSupportDefault(response.Code())
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		if response.Code()/100 == 2 {
			return result, nil
		}
		return nil, result
	}
}

// NewUpdatePartSupportOK creates a UpdatePartSupportOK with default headers values
func NewUpdatePartSupportOK() *UpdatePartSupportOK {
	return &UpdatePartSupportOK{}
}

/*UpdatePartSupportOK handles this case with default header values.

Successfully updated a part support
*/
type UpdatePartSupportOK struct {
	Payload *models.PartSupport
}

func (o *UpdatePartSupportOK) Error() string {
	return fmt.Sprintf("[PUT /parts/{partId}/supports/{supportId}][%d] updatePartSupportOK  %+v", 200, o.Payload)
}

func (o *UpdatePartSupportOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.PartSupport)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewUpdatePartSupportForbidden creates a UpdatePartSupportForbidden with default headers values
func NewUpdatePartSupportForbidden() *UpdatePartSupportForbidden {
	return &UpdatePartSupportForbidden{}
}

/*UpdatePartSupportForbidden handles this case with default header values.

Forbidden
*/
type UpdatePartSupportForbidden struct {
	Payload *models.Error
}

func (o *UpdatePartSupportForbidden) Error() string {
	return fmt.Sprintf("[PUT /parts/{partId}/supports/{supportId}][%d] updatePartSupportForbidden  %+v", 403, o.Payload)
}

func (o *UpdatePartSupportForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewUpdatePartSupportDefault creates a UpdatePartSupportDefault with default headers values
func NewUpdatePartSupportDefault(code int) *UpdatePartSupportDefault {
	return &UpdatePartSupportDefault{
		_statusCode: code,
	}
}

/*UpdatePartSupportDefault handles this case with default header values.

unexpected error
*/
type UpdatePartSupportDefault struct {
	_statusCode int

	Payload *models.Error
}

// Code gets the status code for the update part support default response
func (o *UpdatePartSupportDefault) Code() int {
	return o._statusCode
}

func (o *UpdatePartSupportDefault) Error() string {
	return fmt.Sprintf("[PUT /parts/{partId}/supports/{supportId}][%d] updatePartSupport default  %+v", o._statusCode, o.Payload)
}

func (o *UpdatePartSupportDefault) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
