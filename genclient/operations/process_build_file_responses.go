package operations

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"

	strfmt "github.com/go-openapi/strfmt"

	"github.com/3dsim/simulation-goclient/models"
)

// ProcessBuildFileReader is a Reader for the ProcessBuildFile structure.
type ProcessBuildFileReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *ProcessBuildFileReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {

	case 200:
		result := NewProcessBuildFileOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil

	case 401:
		result := NewProcessBuildFileUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 403:
		result := NewProcessBuildFileForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 404:
		result := NewProcessBuildFileNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		result := NewProcessBuildFileDefault(response.Code())
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		if response.Code()/100 == 2 {
			return result, nil
		}
		return nil, result
	}
}

// NewProcessBuildFileOK creates a ProcessBuildFileOK with default headers values
func NewProcessBuildFileOK() *ProcessBuildFileOK {
	return &ProcessBuildFileOK{}
}

/*ProcessBuildFileOK handles this case with default header values.

Build file after it has been processed
*/
type ProcessBuildFileOK struct {
	Payload *models.BuildFile
}

func (o *ProcessBuildFileOK) Error() string {
	return fmt.Sprintf("[PUT /buildfiles/{id}/process][%d] processBuildFileOK  %+v", 200, o.Payload)
}

func (o *ProcessBuildFileOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.BuildFile)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewProcessBuildFileUnauthorized creates a ProcessBuildFileUnauthorized with default headers values
func NewProcessBuildFileUnauthorized() *ProcessBuildFileUnauthorized {
	return &ProcessBuildFileUnauthorized{}
}

/*ProcessBuildFileUnauthorized handles this case with default header values.

Not authorized
*/
type ProcessBuildFileUnauthorized struct {
	Payload *models.Error
}

func (o *ProcessBuildFileUnauthorized) Error() string {
	return fmt.Sprintf("[PUT /buildfiles/{id}/process][%d] processBuildFileUnauthorized  %+v", 401, o.Payload)
}

func (o *ProcessBuildFileUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewProcessBuildFileForbidden creates a ProcessBuildFileForbidden with default headers values
func NewProcessBuildFileForbidden() *ProcessBuildFileForbidden {
	return &ProcessBuildFileForbidden{}
}

/*ProcessBuildFileForbidden handles this case with default header values.

Forbidden
*/
type ProcessBuildFileForbidden struct {
	Payload *models.Error
}

func (o *ProcessBuildFileForbidden) Error() string {
	return fmt.Sprintf("[PUT /buildfiles/{id}/process][%d] processBuildFileForbidden  %+v", 403, o.Payload)
}

func (o *ProcessBuildFileForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewProcessBuildFileNotFound creates a ProcessBuildFileNotFound with default headers values
func NewProcessBuildFileNotFound() *ProcessBuildFileNotFound {
	return &ProcessBuildFileNotFound{}
}

/*ProcessBuildFileNotFound handles this case with default header values.

build file not found
*/
type ProcessBuildFileNotFound struct {
}

func (o *ProcessBuildFileNotFound) Error() string {
	return fmt.Sprintf("[PUT /buildfiles/{id}/process][%d] processBuildFileNotFound ", 404)
}

func (o *ProcessBuildFileNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewProcessBuildFileDefault creates a ProcessBuildFileDefault with default headers values
func NewProcessBuildFileDefault(code int) *ProcessBuildFileDefault {
	return &ProcessBuildFileDefault{
		_statusCode: code,
	}
}

/*ProcessBuildFileDefault handles this case with default header values.

unexpected error
*/
type ProcessBuildFileDefault struct {
	_statusCode int

	Payload *models.Error
}

// Code gets the status code for the process build file default response
func (o *ProcessBuildFileDefault) Code() int {
	return o._statusCode
}

func (o *ProcessBuildFileDefault) Error() string {
	return fmt.Sprintf("[PUT /buildfiles/{id}/process][%d] processBuildFile default  %+v", o._statusCode, o.Payload)
}

func (o *ProcessBuildFileDefault) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
