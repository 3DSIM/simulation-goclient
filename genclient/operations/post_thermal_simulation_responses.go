// Code generated by go-swagger; DO NOT EDIT.

package operations

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"

	strfmt "github.com/go-openapi/strfmt"

	"github.com/3dsim/simulation-goclient/models"
)

// PostThermalSimulationReader is a Reader for the PostThermalSimulation structure.
type PostThermalSimulationReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *PostThermalSimulationReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {

	case 200:
		result := NewPostThermalSimulationOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil

	case 401:
		result := NewPostThermalSimulationUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 403:
		result := NewPostThermalSimulationForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		result := NewPostThermalSimulationDefault(response.Code())
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		if response.Code()/100 == 2 {
			return result, nil
		}
		return nil, result
	}
}

// NewPostThermalSimulationOK creates a PostThermalSimulationOK with default headers values
func NewPostThermalSimulationOK() *PostThermalSimulationOK {
	return &PostThermalSimulationOK{}
}

/*PostThermalSimulationOK handles this case with default header values.

Successfully added a simulation
*/
type PostThermalSimulationOK struct {
	Payload *models.ThermalSimulation
}

func (o *PostThermalSimulationOK) Error() string {
	return fmt.Sprintf("[POST /thermalsimulations][%d] postThermalSimulationOK  %+v", 200, o.Payload)
}

func (o *PostThermalSimulationOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ThermalSimulation)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPostThermalSimulationUnauthorized creates a PostThermalSimulationUnauthorized with default headers values
func NewPostThermalSimulationUnauthorized() *PostThermalSimulationUnauthorized {
	return &PostThermalSimulationUnauthorized{}
}

/*PostThermalSimulationUnauthorized handles this case with default header values.

Not authorized
*/
type PostThermalSimulationUnauthorized struct {
	Payload *models.Error
}

func (o *PostThermalSimulationUnauthorized) Error() string {
	return fmt.Sprintf("[POST /thermalsimulations][%d] postThermalSimulationUnauthorized  %+v", 401, o.Payload)
}

func (o *PostThermalSimulationUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPostThermalSimulationForbidden creates a PostThermalSimulationForbidden with default headers values
func NewPostThermalSimulationForbidden() *PostThermalSimulationForbidden {
	return &PostThermalSimulationForbidden{}
}

/*PostThermalSimulationForbidden handles this case with default header values.

Forbidden
*/
type PostThermalSimulationForbidden struct {
	Payload *models.Error
}

func (o *PostThermalSimulationForbidden) Error() string {
	return fmt.Sprintf("[POST /thermalsimulations][%d] postThermalSimulationForbidden  %+v", 403, o.Payload)
}

func (o *PostThermalSimulationForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPostThermalSimulationDefault creates a PostThermalSimulationDefault with default headers values
func NewPostThermalSimulationDefault(code int) *PostThermalSimulationDefault {
	return &PostThermalSimulationDefault{
		_statusCode: code,
	}
}

/*PostThermalSimulationDefault handles this case with default header values.

unexpected error
*/
type PostThermalSimulationDefault struct {
	_statusCode int

	Payload *models.Error
}

// Code gets the status code for the post thermal simulation default response
func (o *PostThermalSimulationDefault) Code() int {
	return o._statusCode
}

func (o *PostThermalSimulationDefault) Error() string {
	return fmt.Sprintf("[POST /thermalsimulations][%d] postThermalSimulation default  %+v", o._statusCode, o.Payload)
}

func (o *PostThermalSimulationDefault) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
