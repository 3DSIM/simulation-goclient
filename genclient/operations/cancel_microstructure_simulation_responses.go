// Code generated by go-swagger; DO NOT EDIT.

package operations

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"

	strfmt "github.com/go-openapi/strfmt"

	"github.com/3dsim/simulation-goclient/models"
)

// CancelMicrostructureSimulationReader is a Reader for the CancelMicrostructureSimulation structure.
type CancelMicrostructureSimulationReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *CancelMicrostructureSimulationReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {

	case 200:
		result := NewCancelMicrostructureSimulationOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil

	case 401:
		result := NewCancelMicrostructureSimulationUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 403:
		result := NewCancelMicrostructureSimulationForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 404:
		result := NewCancelMicrostructureSimulationNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		result := NewCancelMicrostructureSimulationDefault(response.Code())
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		if response.Code()/100 == 2 {
			return result, nil
		}
		return nil, result
	}
}

// NewCancelMicrostructureSimulationOK creates a CancelMicrostructureSimulationOK with default headers values
func NewCancelMicrostructureSimulationOK() *CancelMicrostructureSimulationOK {
	return &CancelMicrostructureSimulationOK{}
}

/*CancelMicrostructureSimulationOK handles this case with default header values.

Simulation was successfully cancelled.
*/
type CancelMicrostructureSimulationOK struct {
}

func (o *CancelMicrostructureSimulationOK) Error() string {
	return fmt.Sprintf("[PUT /microstructuresimulations/{id}/cancel][%d] cancelMicrostructureSimulationOK ", 200)
}

func (o *CancelMicrostructureSimulationOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewCancelMicrostructureSimulationUnauthorized creates a CancelMicrostructureSimulationUnauthorized with default headers values
func NewCancelMicrostructureSimulationUnauthorized() *CancelMicrostructureSimulationUnauthorized {
	return &CancelMicrostructureSimulationUnauthorized{}
}

/*CancelMicrostructureSimulationUnauthorized handles this case with default header values.

Not authorized
*/
type CancelMicrostructureSimulationUnauthorized struct {
	Payload *models.Error
}

func (o *CancelMicrostructureSimulationUnauthorized) Error() string {
	return fmt.Sprintf("[PUT /microstructuresimulations/{id}/cancel][%d] cancelMicrostructureSimulationUnauthorized  %+v", 401, o.Payload)
}

func (o *CancelMicrostructureSimulationUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewCancelMicrostructureSimulationForbidden creates a CancelMicrostructureSimulationForbidden with default headers values
func NewCancelMicrostructureSimulationForbidden() *CancelMicrostructureSimulationForbidden {
	return &CancelMicrostructureSimulationForbidden{}
}

/*CancelMicrostructureSimulationForbidden handles this case with default header values.

Forbidden
*/
type CancelMicrostructureSimulationForbidden struct {
	Payload *models.Error
}

func (o *CancelMicrostructureSimulationForbidden) Error() string {
	return fmt.Sprintf("[PUT /microstructuresimulations/{id}/cancel][%d] cancelMicrostructureSimulationForbidden  %+v", 403, o.Payload)
}

func (o *CancelMicrostructureSimulationForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewCancelMicrostructureSimulationNotFound creates a CancelMicrostructureSimulationNotFound with default headers values
func NewCancelMicrostructureSimulationNotFound() *CancelMicrostructureSimulationNotFound {
	return &CancelMicrostructureSimulationNotFound{}
}

/*CancelMicrostructureSimulationNotFound handles this case with default header values.

Simulation not found (id invalid)
*/
type CancelMicrostructureSimulationNotFound struct {
	Payload *models.Error
}

func (o *CancelMicrostructureSimulationNotFound) Error() string {
	return fmt.Sprintf("[PUT /microstructuresimulations/{id}/cancel][%d] cancelMicrostructureSimulationNotFound  %+v", 404, o.Payload)
}

func (o *CancelMicrostructureSimulationNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewCancelMicrostructureSimulationDefault creates a CancelMicrostructureSimulationDefault with default headers values
func NewCancelMicrostructureSimulationDefault(code int) *CancelMicrostructureSimulationDefault {
	return &CancelMicrostructureSimulationDefault{
		_statusCode: code,
	}
}

/*CancelMicrostructureSimulationDefault handles this case with default header values.

unexpected error
*/
type CancelMicrostructureSimulationDefault struct {
	_statusCode int

	Payload *models.Error
}

// Code gets the status code for the cancel microstructure simulation default response
func (o *CancelMicrostructureSimulationDefault) Code() int {
	return o._statusCode
}

func (o *CancelMicrostructureSimulationDefault) Error() string {
	return fmt.Sprintf("[PUT /microstructuresimulations/{id}/cancel][%d] cancelMicrostructureSimulation default  %+v", o._statusCode, o.Payload)
}

func (o *CancelMicrostructureSimulationDefault) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
