package operations

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"

	strfmt "github.com/go-openapi/strfmt"

	"github.com/3dsim/simulation-goclient/models"
)

// GetBuildFileGeometryURLReader is a Reader for the GetBuildFileGeometryURL structure.
type GetBuildFileGeometryURLReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GetBuildFileGeometryURLReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {

	case 200:
		result := NewGetBuildFileGeometryURLOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil

	case 401:
		result := NewGetBuildFileGeometryURLUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 403:
		result := NewGetBuildFileGeometryURLForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 404:
		result := NewGetBuildFileGeometryURLNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		result := NewGetBuildFileGeometryURLDefault(response.Code())
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		if response.Code()/100 == 2 {
			return result, nil
		}
		return nil, result
	}
}

// NewGetBuildFileGeometryURLOK creates a GetBuildFileGeometryURLOK with default headers values
func NewGetBuildFileGeometryURLOK() *GetBuildFileGeometryURLOK {
	return &GetBuildFileGeometryURLOK{}
}

/*GetBuildFileGeometryURLOK handles this case with default header values.

URL to the part STL file
*/
type GetBuildFileGeometryURLOK struct {
	Payload string
}

func (o *GetBuildFileGeometryURLOK) Error() string {
	return fmt.Sprintf("[GET /buildfiles/{id}/geometryurl][%d] getBuildFileGeometryUrlOK  %+v", 200, o.Payload)
}

func (o *GetBuildFileGeometryURLOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetBuildFileGeometryURLUnauthorized creates a GetBuildFileGeometryURLUnauthorized with default headers values
func NewGetBuildFileGeometryURLUnauthorized() *GetBuildFileGeometryURLUnauthorized {
	return &GetBuildFileGeometryURLUnauthorized{}
}

/*GetBuildFileGeometryURLUnauthorized handles this case with default header values.

Not authorized
*/
type GetBuildFileGeometryURLUnauthorized struct {
	Payload *models.Error
}

func (o *GetBuildFileGeometryURLUnauthorized) Error() string {
	return fmt.Sprintf("[GET /buildfiles/{id}/geometryurl][%d] getBuildFileGeometryUrlUnauthorized  %+v", 401, o.Payload)
}

func (o *GetBuildFileGeometryURLUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetBuildFileGeometryURLForbidden creates a GetBuildFileGeometryURLForbidden with default headers values
func NewGetBuildFileGeometryURLForbidden() *GetBuildFileGeometryURLForbidden {
	return &GetBuildFileGeometryURLForbidden{}
}

/*GetBuildFileGeometryURLForbidden handles this case with default header values.

Forbidden
*/
type GetBuildFileGeometryURLForbidden struct {
	Payload *models.Error
}

func (o *GetBuildFileGeometryURLForbidden) Error() string {
	return fmt.Sprintf("[GET /buildfiles/{id}/geometryurl][%d] getBuildFileGeometryUrlForbidden  %+v", 403, o.Payload)
}

func (o *GetBuildFileGeometryURLForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetBuildFileGeometryURLNotFound creates a GetBuildFileGeometryURLNotFound with default headers values
func NewGetBuildFileGeometryURLNotFound() *GetBuildFileGeometryURLNotFound {
	return &GetBuildFileGeometryURLNotFound{}
}

/*GetBuildFileGeometryURLNotFound handles this case with default header values.

build file not found
*/
type GetBuildFileGeometryURLNotFound struct {
}

func (o *GetBuildFileGeometryURLNotFound) Error() string {
	return fmt.Sprintf("[GET /buildfiles/{id}/geometryurl][%d] getBuildFileGeometryUrlNotFound ", 404)
}

func (o *GetBuildFileGeometryURLNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewGetBuildFileGeometryURLDefault creates a GetBuildFileGeometryURLDefault with default headers values
func NewGetBuildFileGeometryURLDefault(code int) *GetBuildFileGeometryURLDefault {
	return &GetBuildFileGeometryURLDefault{
		_statusCode: code,
	}
}

/*GetBuildFileGeometryURLDefault handles this case with default header values.

unexpected error
*/
type GetBuildFileGeometryURLDefault struct {
	_statusCode int

	Payload *models.Error
}

// Code gets the status code for the get build file geometry Url default response
func (o *GetBuildFileGeometryURLDefault) Code() int {
	return o._statusCode
}

func (o *GetBuildFileGeometryURLDefault) Error() string {
	return fmt.Sprintf("[GET /buildfiles/{id}/geometryurl][%d] getBuildFileGeometryUrl default  %+v", o._statusCode, o.Payload)
}

func (o *GetBuildFileGeometryURLDefault) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
