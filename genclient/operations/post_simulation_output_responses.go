package operations

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"

	strfmt "github.com/go-openapi/strfmt"

	"github.com/3dsim/simulation-goclient/models"
)

// PostSimulationOutputReader is a Reader for the PostSimulationOutput structure.
type PostSimulationOutputReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *PostSimulationOutputReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {

	case 200:
		result := NewPostSimulationOutputOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil

	case 401:
		result := NewPostSimulationOutputUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 403:
		result := NewPostSimulationOutputForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		result := NewPostSimulationOutputDefault(response.Code())
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		if response.Code()/100 == 2 {
			return result, nil
		}
		return nil, result
	}
}

// NewPostSimulationOutputOK creates a PostSimulationOutputOK with default headers values
func NewPostSimulationOutputOK() *PostSimulationOutputOK {
	return &PostSimulationOutputOK{}
}

/*PostSimulationOutputOK handles this case with default header values.

Successfully added the item
*/
type PostSimulationOutputOK struct {
	Payload *models.SimulationOutput
}

func (o *PostSimulationOutputOK) Error() string {
	return fmt.Sprintf("[POST /simulations/{id}/outputs][%d] postSimulationOutputOK  %+v", 200, o.Payload)
}

func (o *PostSimulationOutputOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.SimulationOutput)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPostSimulationOutputUnauthorized creates a PostSimulationOutputUnauthorized with default headers values
func NewPostSimulationOutputUnauthorized() *PostSimulationOutputUnauthorized {
	return &PostSimulationOutputUnauthorized{}
}

/*PostSimulationOutputUnauthorized handles this case with default header values.

Not authorized
*/
type PostSimulationOutputUnauthorized struct {
	Payload *models.Error
}

func (o *PostSimulationOutputUnauthorized) Error() string {
	return fmt.Sprintf("[POST /simulations/{id}/outputs][%d] postSimulationOutputUnauthorized  %+v", 401, o.Payload)
}

func (o *PostSimulationOutputUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPostSimulationOutputForbidden creates a PostSimulationOutputForbidden with default headers values
func NewPostSimulationOutputForbidden() *PostSimulationOutputForbidden {
	return &PostSimulationOutputForbidden{}
}

/*PostSimulationOutputForbidden handles this case with default header values.

Forbidden
*/
type PostSimulationOutputForbidden struct {
	Payload *models.Error
}

func (o *PostSimulationOutputForbidden) Error() string {
	return fmt.Sprintf("[POST /simulations/{id}/outputs][%d] postSimulationOutputForbidden  %+v", 403, o.Payload)
}

func (o *PostSimulationOutputForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPostSimulationOutputDefault creates a PostSimulationOutputDefault with default headers values
func NewPostSimulationOutputDefault(code int) *PostSimulationOutputDefault {
	return &PostSimulationOutputDefault{
		_statusCode: code,
	}
}

/*PostSimulationOutputDefault handles this case with default header values.

unexpected error
*/
type PostSimulationOutputDefault struct {
	_statusCode int

	Payload *models.Error
}

// Code gets the status code for the post simulation output default response
func (o *PostSimulationOutputDefault) Code() int {
	return o._statusCode
}

func (o *PostSimulationOutputDefault) Error() string {
	return fmt.Sprintf("[POST /simulations/{id}/outputs][%d] postSimulationOutput default  %+v", o._statusCode, o.Payload)
}

func (o *PostSimulationOutputDefault) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
