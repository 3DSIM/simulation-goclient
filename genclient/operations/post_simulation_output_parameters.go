package operations

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"net/http"
	"time"

	"golang.org/x/net/context"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/runtime"
	cr "github.com/go-openapi/runtime/client"
	"github.com/go-openapi/swag"

	strfmt "github.com/go-openapi/strfmt"

	"github.com/3dsim/simulation-goclient/models"
)

// NewPostSimulationOutputParams creates a new PostSimulationOutputParams object
// with the default values initialized.
func NewPostSimulationOutputParams() *PostSimulationOutputParams {
	var ()
	return &PostSimulationOutputParams{

		timeout: cr.DefaultTimeout,
	}
}

// NewPostSimulationOutputParamsWithTimeout creates a new PostSimulationOutputParams object
// with the default values initialized, and the ability to set a timeout on a request
func NewPostSimulationOutputParamsWithTimeout(timeout time.Duration) *PostSimulationOutputParams {
	var ()
	return &PostSimulationOutputParams{

		timeout: timeout,
	}
}

// NewPostSimulationOutputParamsWithContext creates a new PostSimulationOutputParams object
// with the default values initialized, and the ability to set a context for a request
func NewPostSimulationOutputParamsWithContext(ctx context.Context) *PostSimulationOutputParams {
	var ()
	return &PostSimulationOutputParams{

		Context: ctx,
	}
}

/*PostSimulationOutputParams contains all the parameters to send to the API endpoint
for the post simulation output operation typically these are written to a http.Request
*/
type PostSimulationOutputParams struct {

	/*SimulationOutput
	  An output for a simulation

	*/
	SimulationOutput *models.SimulationOutput
	/*ID
	  simulation identifier

	*/
	ID int32

	timeout    time.Duration
	Context    context.Context
	HTTPClient *http.Client
}

// WithTimeout adds the timeout to the post simulation output params
func (o *PostSimulationOutputParams) WithTimeout(timeout time.Duration) *PostSimulationOutputParams {
	o.SetTimeout(timeout)
	return o
}

// SetTimeout adds the timeout to the post simulation output params
func (o *PostSimulationOutputParams) SetTimeout(timeout time.Duration) {
	o.timeout = timeout
}

// WithContext adds the context to the post simulation output params
func (o *PostSimulationOutputParams) WithContext(ctx context.Context) *PostSimulationOutputParams {
	o.SetContext(ctx)
	return o
}

// SetContext adds the context to the post simulation output params
func (o *PostSimulationOutputParams) SetContext(ctx context.Context) {
	o.Context = ctx
}

// WithSimulationOutput adds the simulationOutput to the post simulation output params
func (o *PostSimulationOutputParams) WithSimulationOutput(simulationOutput *models.SimulationOutput) *PostSimulationOutputParams {
	o.SetSimulationOutput(simulationOutput)
	return o
}

// SetSimulationOutput adds the simulationOutput to the post simulation output params
func (o *PostSimulationOutputParams) SetSimulationOutput(simulationOutput *models.SimulationOutput) {
	o.SimulationOutput = simulationOutput
}

// WithID adds the id to the post simulation output params
func (o *PostSimulationOutputParams) WithID(id int32) *PostSimulationOutputParams {
	o.SetID(id)
	return o
}

// SetID adds the id to the post simulation output params
func (o *PostSimulationOutputParams) SetID(id int32) {
	o.ID = id
}

// WriteToRequest writes these params to a swagger request
func (o *PostSimulationOutputParams) WriteToRequest(r runtime.ClientRequest, reg strfmt.Registry) error {

	r.SetTimeout(o.timeout)
	var res []error

	if o.SimulationOutput == nil {
		o.SimulationOutput = new(models.SimulationOutput)
	}

	if err := r.SetBodyParam(o.SimulationOutput); err != nil {
		return err
	}

	// path param id
	if err := r.SetPathParam("id", swag.FormatInt32(o.ID)); err != nil {
		return err
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}
