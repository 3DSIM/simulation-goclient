// Code generated by go-swagger; DO NOT EDIT.

package operations

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"

	strfmt "github.com/go-openapi/strfmt"

	"github.com/3dsim/simulation-goclient/models"
)

// DeleteSingleBeadSimulationReader is a Reader for the DeleteSingleBeadSimulation structure.
type DeleteSingleBeadSimulationReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *DeleteSingleBeadSimulationReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {

	case 200:
		result := NewDeleteSingleBeadSimulationOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil

	case 401:
		result := NewDeleteSingleBeadSimulationUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 403:
		result := NewDeleteSingleBeadSimulationForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 404:
		result := NewDeleteSingleBeadSimulationNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		result := NewDeleteSingleBeadSimulationDefault(response.Code())
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		if response.Code()/100 == 2 {
			return result, nil
		}
		return nil, result
	}
}

// NewDeleteSingleBeadSimulationOK creates a DeleteSingleBeadSimulationOK with default headers values
func NewDeleteSingleBeadSimulationOK() *DeleteSingleBeadSimulationOK {
	return &DeleteSingleBeadSimulationOK{}
}

/*DeleteSingleBeadSimulationOK handles this case with default header values.

Successfully deleted a simulation
*/
type DeleteSingleBeadSimulationOK struct {
}

func (o *DeleteSingleBeadSimulationOK) Error() string {
	return fmt.Sprintf("[DELETE /singlebeadsimulations/{id}][%d] deleteSingleBeadSimulationOK ", 200)
}

func (o *DeleteSingleBeadSimulationOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewDeleteSingleBeadSimulationUnauthorized creates a DeleteSingleBeadSimulationUnauthorized with default headers values
func NewDeleteSingleBeadSimulationUnauthorized() *DeleteSingleBeadSimulationUnauthorized {
	return &DeleteSingleBeadSimulationUnauthorized{}
}

/*DeleteSingleBeadSimulationUnauthorized handles this case with default header values.

Not authorized
*/
type DeleteSingleBeadSimulationUnauthorized struct {
	Payload *models.Error
}

func (o *DeleteSingleBeadSimulationUnauthorized) Error() string {
	return fmt.Sprintf("[DELETE /singlebeadsimulations/{id}][%d] deleteSingleBeadSimulationUnauthorized  %+v", 401, o.Payload)
}

func (o *DeleteSingleBeadSimulationUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewDeleteSingleBeadSimulationForbidden creates a DeleteSingleBeadSimulationForbidden with default headers values
func NewDeleteSingleBeadSimulationForbidden() *DeleteSingleBeadSimulationForbidden {
	return &DeleteSingleBeadSimulationForbidden{}
}

/*DeleteSingleBeadSimulationForbidden handles this case with default header values.

Forbidden
*/
type DeleteSingleBeadSimulationForbidden struct {
	Payload *models.Error
}

func (o *DeleteSingleBeadSimulationForbidden) Error() string {
	return fmt.Sprintf("[DELETE /singlebeadsimulations/{id}][%d] deleteSingleBeadSimulationForbidden  %+v", 403, o.Payload)
}

func (o *DeleteSingleBeadSimulationForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewDeleteSingleBeadSimulationNotFound creates a DeleteSingleBeadSimulationNotFound with default headers values
func NewDeleteSingleBeadSimulationNotFound() *DeleteSingleBeadSimulationNotFound {
	return &DeleteSingleBeadSimulationNotFound{}
}

/*DeleteSingleBeadSimulationNotFound handles this case with default header values.

Not Found
*/
type DeleteSingleBeadSimulationNotFound struct {
}

func (o *DeleteSingleBeadSimulationNotFound) Error() string {
	return fmt.Sprintf("[DELETE /singlebeadsimulations/{id}][%d] deleteSingleBeadSimulationNotFound ", 404)
}

func (o *DeleteSingleBeadSimulationNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewDeleteSingleBeadSimulationDefault creates a DeleteSingleBeadSimulationDefault with default headers values
func NewDeleteSingleBeadSimulationDefault(code int) *DeleteSingleBeadSimulationDefault {
	return &DeleteSingleBeadSimulationDefault{
		_statusCode: code,
	}
}

/*DeleteSingleBeadSimulationDefault handles this case with default header values.

unexpected error
*/
type DeleteSingleBeadSimulationDefault struct {
	_statusCode int

	Payload *models.Error
}

// Code gets the status code for the delete single bead simulation default response
func (o *DeleteSingleBeadSimulationDefault) Code() int {
	return o._statusCode
}

func (o *DeleteSingleBeadSimulationDefault) Error() string {
	return fmt.Sprintf("[DELETE /singlebeadsimulations/{id}][%d] DeleteSingleBeadSimulation default  %+v", o._statusCode, o.Payload)
}

func (o *DeleteSingleBeadSimulationDefault) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
