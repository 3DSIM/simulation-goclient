// Code generated by go-swagger; DO NOT EDIT.

package operations

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"

	strfmt "github.com/go-openapi/strfmt"

	"github.com/3dsim/simulation-goclient/models"
)

// StartScanPatternSimulationReader is a Reader for the StartScanPatternSimulation structure.
type StartScanPatternSimulationReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *StartScanPatternSimulationReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {

	case 200:
		result := NewStartScanPatternSimulationOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil

	case 401:
		result := NewStartScanPatternSimulationUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 403:
		result := NewStartScanPatternSimulationForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 404:
		result := NewStartScanPatternSimulationNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		result := NewStartScanPatternSimulationDefault(response.Code())
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		if response.Code()/100 == 2 {
			return result, nil
		}
		return nil, result
	}
}

// NewStartScanPatternSimulationOK creates a StartScanPatternSimulationOK with default headers values
func NewStartScanPatternSimulationOK() *StartScanPatternSimulationOK {
	return &StartScanPatternSimulationOK{}
}

/*StartScanPatternSimulationOK handles this case with default header values.

Simulation was successfully started.
*/
type StartScanPatternSimulationOK struct {
}

func (o *StartScanPatternSimulationOK) Error() string {
	return fmt.Sprintf("[PUT /scanpatternsimulations/{id}/start][%d] startScanPatternSimulationOK ", 200)
}

func (o *StartScanPatternSimulationOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewStartScanPatternSimulationUnauthorized creates a StartScanPatternSimulationUnauthorized with default headers values
func NewStartScanPatternSimulationUnauthorized() *StartScanPatternSimulationUnauthorized {
	return &StartScanPatternSimulationUnauthorized{}
}

/*StartScanPatternSimulationUnauthorized handles this case with default header values.

Not authorized
*/
type StartScanPatternSimulationUnauthorized struct {
	Payload *models.Error
}

func (o *StartScanPatternSimulationUnauthorized) Error() string {
	return fmt.Sprintf("[PUT /scanpatternsimulations/{id}/start][%d] startScanPatternSimulationUnauthorized  %+v", 401, o.Payload)
}

func (o *StartScanPatternSimulationUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewStartScanPatternSimulationForbidden creates a StartScanPatternSimulationForbidden with default headers values
func NewStartScanPatternSimulationForbidden() *StartScanPatternSimulationForbidden {
	return &StartScanPatternSimulationForbidden{}
}

/*StartScanPatternSimulationForbidden handles this case with default header values.

Forbidden
*/
type StartScanPatternSimulationForbidden struct {
	Payload *models.Error
}

func (o *StartScanPatternSimulationForbidden) Error() string {
	return fmt.Sprintf("[PUT /scanpatternsimulations/{id}/start][%d] startScanPatternSimulationForbidden  %+v", 403, o.Payload)
}

func (o *StartScanPatternSimulationForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewStartScanPatternSimulationNotFound creates a StartScanPatternSimulationNotFound with default headers values
func NewStartScanPatternSimulationNotFound() *StartScanPatternSimulationNotFound {
	return &StartScanPatternSimulationNotFound{}
}

/*StartScanPatternSimulationNotFound handles this case with default header values.

Simulation not found (id invalid)
*/
type StartScanPatternSimulationNotFound struct {
	Payload *models.Error
}

func (o *StartScanPatternSimulationNotFound) Error() string {
	return fmt.Sprintf("[PUT /scanpatternsimulations/{id}/start][%d] startScanPatternSimulationNotFound  %+v", 404, o.Payload)
}

func (o *StartScanPatternSimulationNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewStartScanPatternSimulationDefault creates a StartScanPatternSimulationDefault with default headers values
func NewStartScanPatternSimulationDefault(code int) *StartScanPatternSimulationDefault {
	return &StartScanPatternSimulationDefault{
		_statusCode: code,
	}
}

/*StartScanPatternSimulationDefault handles this case with default header values.

unexpected error
*/
type StartScanPatternSimulationDefault struct {
	_statusCode int

	Payload *models.Error
}

// Code gets the status code for the start scan pattern simulation default response
func (o *StartScanPatternSimulationDefault) Code() int {
	return o._statusCode
}

func (o *StartScanPatternSimulationDefault) Error() string {
	return fmt.Sprintf("[PUT /scanpatternsimulations/{id}/start][%d] startScanPatternSimulation default  %+v", o._statusCode, o.Payload)
}

func (o *StartScanPatternSimulationDefault) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
