// Code generated by go-swagger; DO NOT EDIT.

package operations

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"

	strfmt "github.com/go-openapi/strfmt"

	"github.com/3dsim/simulation-goclient/models"
)

// GetSimulationReader is a Reader for the GetSimulation structure.
type GetSimulationReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GetSimulationReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {

	case 200:
		result := NewGetSimulationOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil

	case 401:
		result := NewGetSimulationUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 403:
		result := NewGetSimulationForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 404:
		result := NewGetSimulationNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		result := NewGetSimulationDefault(response.Code())
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		if response.Code()/100 == 2 {
			return result, nil
		}
		return nil, result
	}
}

// NewGetSimulationOK creates a GetSimulationOK with default headers values
func NewGetSimulationOK() *GetSimulationOK {
	return &GetSimulationOK{}
}

/*GetSimulationOK handles this case with default header values.

Successfully retrieved simulation
*/
type GetSimulationOK struct {
	Payload *models.Simulation
}

func (o *GetSimulationOK) Error() string {
	return fmt.Sprintf("[GET /simulations/{id}][%d] getSimulationOK  %+v", 200, o.Payload)
}

func (o *GetSimulationOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Simulation)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetSimulationUnauthorized creates a GetSimulationUnauthorized with default headers values
func NewGetSimulationUnauthorized() *GetSimulationUnauthorized {
	return &GetSimulationUnauthorized{}
}

/*GetSimulationUnauthorized handles this case with default header values.

Not authorized
*/
type GetSimulationUnauthorized struct {
	Payload *models.Error
}

func (o *GetSimulationUnauthorized) Error() string {
	return fmt.Sprintf("[GET /simulations/{id}][%d] getSimulationUnauthorized  %+v", 401, o.Payload)
}

func (o *GetSimulationUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetSimulationForbidden creates a GetSimulationForbidden with default headers values
func NewGetSimulationForbidden() *GetSimulationForbidden {
	return &GetSimulationForbidden{}
}

/*GetSimulationForbidden handles this case with default header values.

Forbidden
*/
type GetSimulationForbidden struct {
	Payload *models.Error
}

func (o *GetSimulationForbidden) Error() string {
	return fmt.Sprintf("[GET /simulations/{id}][%d] getSimulationForbidden  %+v", 403, o.Payload)
}

func (o *GetSimulationForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetSimulationNotFound creates a GetSimulationNotFound with default headers values
func NewGetSimulationNotFound() *GetSimulationNotFound {
	return &GetSimulationNotFound{}
}

/*GetSimulationNotFound handles this case with default header values.

Simulation not found (id invalid)
*/
type GetSimulationNotFound struct {
	Payload *models.Error
}

func (o *GetSimulationNotFound) Error() string {
	return fmt.Sprintf("[GET /simulations/{id}][%d] getSimulationNotFound  %+v", 404, o.Payload)
}

func (o *GetSimulationNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetSimulationDefault creates a GetSimulationDefault with default headers values
func NewGetSimulationDefault(code int) *GetSimulationDefault {
	return &GetSimulationDefault{
		_statusCode: code,
	}
}

/*GetSimulationDefault handles this case with default header values.

unexpected error
*/
type GetSimulationDefault struct {
	_statusCode int

	Payload *models.Error
}

// Code gets the status code for the get simulation default response
func (o *GetSimulationDefault) Code() int {
	return o._statusCode
}

func (o *GetSimulationDefault) Error() string {
	return fmt.Sprintf("[GET /simulations/{id}][%d] getSimulation default  %+v", o._statusCode, o.Payload)
}

func (o *GetSimulationDefault) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
