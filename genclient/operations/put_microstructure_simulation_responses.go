// Code generated by go-swagger; DO NOT EDIT.

package operations

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"

	strfmt "github.com/go-openapi/strfmt"

	"github.com/3dsim/simulation-goclient/models"
)

// PutMicrostructureSimulationReader is a Reader for the PutMicrostructureSimulation structure.
type PutMicrostructureSimulationReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *PutMicrostructureSimulationReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {

	case 200:
		result := NewPutMicrostructureSimulationOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil

	case 401:
		result := NewPutMicrostructureSimulationUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 403:
		result := NewPutMicrostructureSimulationForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		result := NewPutMicrostructureSimulationDefault(response.Code())
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		if response.Code()/100 == 2 {
			return result, nil
		}
		return nil, result
	}
}

// NewPutMicrostructureSimulationOK creates a PutMicrostructureSimulationOK with default headers values
func NewPutMicrostructureSimulationOK() *PutMicrostructureSimulationOK {
	return &PutMicrostructureSimulationOK{}
}

/*PutMicrostructureSimulationOK handles this case with default header values.

Successfully updated a simulation
*/
type PutMicrostructureSimulationOK struct {
	Payload *models.MicrostructureSimulation
}

func (o *PutMicrostructureSimulationOK) Error() string {
	return fmt.Sprintf("[PUT /microstructuresimulations/{id}][%d] putMicrostructureSimulationOK  %+v", 200, o.Payload)
}

func (o *PutMicrostructureSimulationOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.MicrostructureSimulation)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPutMicrostructureSimulationUnauthorized creates a PutMicrostructureSimulationUnauthorized with default headers values
func NewPutMicrostructureSimulationUnauthorized() *PutMicrostructureSimulationUnauthorized {
	return &PutMicrostructureSimulationUnauthorized{}
}

/*PutMicrostructureSimulationUnauthorized handles this case with default header values.

Not authorized
*/
type PutMicrostructureSimulationUnauthorized struct {
	Payload *models.Error
}

func (o *PutMicrostructureSimulationUnauthorized) Error() string {
	return fmt.Sprintf("[PUT /microstructuresimulations/{id}][%d] putMicrostructureSimulationUnauthorized  %+v", 401, o.Payload)
}

func (o *PutMicrostructureSimulationUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPutMicrostructureSimulationForbidden creates a PutMicrostructureSimulationForbidden with default headers values
func NewPutMicrostructureSimulationForbidden() *PutMicrostructureSimulationForbidden {
	return &PutMicrostructureSimulationForbidden{}
}

/*PutMicrostructureSimulationForbidden handles this case with default header values.

Forbidden
*/
type PutMicrostructureSimulationForbidden struct {
	Payload *models.Error
}

func (o *PutMicrostructureSimulationForbidden) Error() string {
	return fmt.Sprintf("[PUT /microstructuresimulations/{id}][%d] putMicrostructureSimulationForbidden  %+v", 403, o.Payload)
}

func (o *PutMicrostructureSimulationForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPutMicrostructureSimulationDefault creates a PutMicrostructureSimulationDefault with default headers values
func NewPutMicrostructureSimulationDefault(code int) *PutMicrostructureSimulationDefault {
	return &PutMicrostructureSimulationDefault{
		_statusCode: code,
	}
}

/*PutMicrostructureSimulationDefault handles this case with default header values.

unexpected error
*/
type PutMicrostructureSimulationDefault struct {
	_statusCode int

	Payload *models.Error
}

// Code gets the status code for the put microstructure simulation default response
func (o *PutMicrostructureSimulationDefault) Code() int {
	return o._statusCode
}

func (o *PutMicrostructureSimulationDefault) Error() string {
	return fmt.Sprintf("[PUT /microstructuresimulations/{id}][%d] putMicrostructureSimulation default  %+v", o._statusCode, o.Payload)
}

func (o *PutMicrostructureSimulationDefault) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
