// Code generated by go-swagger; DO NOT EDIT.

package operations

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"

	strfmt "github.com/go-openapi/strfmt"

	"github.com/3dsim/simulation-goclient/models"
)

// GetPartSupportByIDReader is a Reader for the GetPartSupportByID structure.
type GetPartSupportByIDReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GetPartSupportByIDReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {

	case 200:
		result := NewGetPartSupportByIDOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil

	case 403:
		result := NewGetPartSupportByIDForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 404:
		result := NewGetPartSupportByIDNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		result := NewGetPartSupportByIDDefault(response.Code())
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		if response.Code()/100 == 2 {
			return result, nil
		}
		return nil, result
	}
}

// NewGetPartSupportByIDOK creates a GetPartSupportByIDOK with default headers values
func NewGetPartSupportByIDOK() *GetPartSupportByIDOK {
	return &GetPartSupportByIDOK{}
}

/*GetPartSupportByIDOK handles this case with default header values.

Successfully found a support
*/
type GetPartSupportByIDOK struct {
	Payload *models.PartSupport
}

func (o *GetPartSupportByIDOK) Error() string {
	return fmt.Sprintf("[GET /supports/{id}][%d] getPartSupportByIdOK  %+v", 200, o.Payload)
}

func (o *GetPartSupportByIDOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.PartSupport)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetPartSupportByIDForbidden creates a GetPartSupportByIDForbidden with default headers values
func NewGetPartSupportByIDForbidden() *GetPartSupportByIDForbidden {
	return &GetPartSupportByIDForbidden{}
}

/*GetPartSupportByIDForbidden handles this case with default header values.

Forbidden
*/
type GetPartSupportByIDForbidden struct {
	Payload *models.Error
}

func (o *GetPartSupportByIDForbidden) Error() string {
	return fmt.Sprintf("[GET /supports/{id}][%d] getPartSupportByIdForbidden  %+v", 403, o.Payload)
}

func (o *GetPartSupportByIDForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetPartSupportByIDNotFound creates a GetPartSupportByIDNotFound with default headers values
func NewGetPartSupportByIDNotFound() *GetPartSupportByIDNotFound {
	return &GetPartSupportByIDNotFound{}
}

/*GetPartSupportByIDNotFound handles this case with default header values.

Not found
*/
type GetPartSupportByIDNotFound struct {
}

func (o *GetPartSupportByIDNotFound) Error() string {
	return fmt.Sprintf("[GET /supports/{id}][%d] getPartSupportByIdNotFound ", 404)
}

func (o *GetPartSupportByIDNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewGetPartSupportByIDDefault creates a GetPartSupportByIDDefault with default headers values
func NewGetPartSupportByIDDefault(code int) *GetPartSupportByIDDefault {
	return &GetPartSupportByIDDefault{
		_statusCode: code,
	}
}

/*GetPartSupportByIDDefault handles this case with default header values.

unexpected error
*/
type GetPartSupportByIDDefault struct {
	_statusCode int

	Payload *models.Error
}

// Code gets the status code for the get part support by Id default response
func (o *GetPartSupportByIDDefault) Code() int {
	return o._statusCode
}

func (o *GetPartSupportByIDDefault) Error() string {
	return fmt.Sprintf("[GET /supports/{id}][%d] getPartSupportById default  %+v", o._statusCode, o.Payload)
}

func (o *GetPartSupportByIDDefault) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
