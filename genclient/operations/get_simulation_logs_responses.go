// Code generated by go-swagger; DO NOT EDIT.

package operations

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"

	strfmt "github.com/go-openapi/strfmt"

	"github.com/3dsim/simulation-goclient/models"
)

// GetSimulationLogsReader is a Reader for the GetSimulationLogs structure.
type GetSimulationLogsReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GetSimulationLogsReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {

	case 200:
		result := NewGetSimulationLogsOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil

	case 401:
		result := NewGetSimulationLogsUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 403:
		result := NewGetSimulationLogsForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		result := NewGetSimulationLogsDefault(response.Code())
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		if response.Code()/100 == 2 {
			return result, nil
		}
		return nil, result
	}
}

// NewGetSimulationLogsOK creates a GetSimulationLogsOK with default headers values
func NewGetSimulationLogsOK() *GetSimulationLogsOK {
	return &GetSimulationLogsOK{}
}

/*GetSimulationLogsOK handles this case with default header values.

Successfully found the list of items
*/
type GetSimulationLogsOK struct {
	Payload models.GetSimulationLogsOKBody
}

func (o *GetSimulationLogsOK) Error() string {
	return fmt.Sprintf("[GET /simulations/{id}/logs][%d] getSimulationLogsOK  %+v", 200, o.Payload)
}

func (o *GetSimulationLogsOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetSimulationLogsUnauthorized creates a GetSimulationLogsUnauthorized with default headers values
func NewGetSimulationLogsUnauthorized() *GetSimulationLogsUnauthorized {
	return &GetSimulationLogsUnauthorized{}
}

/*GetSimulationLogsUnauthorized handles this case with default header values.

Not authorized
*/
type GetSimulationLogsUnauthorized struct {
	Payload *models.Error
}

func (o *GetSimulationLogsUnauthorized) Error() string {
	return fmt.Sprintf("[GET /simulations/{id}/logs][%d] getSimulationLogsUnauthorized  %+v", 401, o.Payload)
}

func (o *GetSimulationLogsUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetSimulationLogsForbidden creates a GetSimulationLogsForbidden with default headers values
func NewGetSimulationLogsForbidden() *GetSimulationLogsForbidden {
	return &GetSimulationLogsForbidden{}
}

/*GetSimulationLogsForbidden handles this case with default header values.

Forbidden
*/
type GetSimulationLogsForbidden struct {
	Payload *models.Error
}

func (o *GetSimulationLogsForbidden) Error() string {
	return fmt.Sprintf("[GET /simulations/{id}/logs][%d] getSimulationLogsForbidden  %+v", 403, o.Payload)
}

func (o *GetSimulationLogsForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetSimulationLogsDefault creates a GetSimulationLogsDefault with default headers values
func NewGetSimulationLogsDefault(code int) *GetSimulationLogsDefault {
	return &GetSimulationLogsDefault{
		_statusCode: code,
	}
}

/*GetSimulationLogsDefault handles this case with default header values.

unexpected error
*/
type GetSimulationLogsDefault struct {
	_statusCode int

	Payload *models.Error
}

// Code gets the status code for the get simulation logs default response
func (o *GetSimulationLogsDefault) Code() int {
	return o._statusCode
}

func (o *GetSimulationLogsDefault) Error() string {
	return fmt.Sprintf("[GET /simulations/{id}/logs][%d] getSimulationLogs default  %+v", o._statusCode, o.Payload)
}

func (o *GetSimulationLogsDefault) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
