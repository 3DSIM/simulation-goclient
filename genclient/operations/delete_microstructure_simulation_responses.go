// Code generated by go-swagger; DO NOT EDIT.

package operations

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"

	strfmt "github.com/go-openapi/strfmt"

	"github.com/3dsim/simulation-goclient/models"
)

// DeleteMicrostructureSimulationReader is a Reader for the DeleteMicrostructureSimulation structure.
type DeleteMicrostructureSimulationReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *DeleteMicrostructureSimulationReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {

	case 200:
		result := NewDeleteMicrostructureSimulationOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil

	case 401:
		result := NewDeleteMicrostructureSimulationUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 403:
		result := NewDeleteMicrostructureSimulationForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 404:
		result := NewDeleteMicrostructureSimulationNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		result := NewDeleteMicrostructureSimulationDefault(response.Code())
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		if response.Code()/100 == 2 {
			return result, nil
		}
		return nil, result
	}
}

// NewDeleteMicrostructureSimulationOK creates a DeleteMicrostructureSimulationOK with default headers values
func NewDeleteMicrostructureSimulationOK() *DeleteMicrostructureSimulationOK {
	return &DeleteMicrostructureSimulationOK{}
}

/*DeleteMicrostructureSimulationOK handles this case with default header values.

Successfully deleted a simulation
*/
type DeleteMicrostructureSimulationOK struct {
}

func (o *DeleteMicrostructureSimulationOK) Error() string {
	return fmt.Sprintf("[DELETE /microstructuresimulations/{id}][%d] deleteMicrostructureSimulationOK ", 200)
}

func (o *DeleteMicrostructureSimulationOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewDeleteMicrostructureSimulationUnauthorized creates a DeleteMicrostructureSimulationUnauthorized with default headers values
func NewDeleteMicrostructureSimulationUnauthorized() *DeleteMicrostructureSimulationUnauthorized {
	return &DeleteMicrostructureSimulationUnauthorized{}
}

/*DeleteMicrostructureSimulationUnauthorized handles this case with default header values.

Not authorized
*/
type DeleteMicrostructureSimulationUnauthorized struct {
	Payload *models.Error
}

func (o *DeleteMicrostructureSimulationUnauthorized) Error() string {
	return fmt.Sprintf("[DELETE /microstructuresimulations/{id}][%d] deleteMicrostructureSimulationUnauthorized  %+v", 401, o.Payload)
}

func (o *DeleteMicrostructureSimulationUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewDeleteMicrostructureSimulationForbidden creates a DeleteMicrostructureSimulationForbidden with default headers values
func NewDeleteMicrostructureSimulationForbidden() *DeleteMicrostructureSimulationForbidden {
	return &DeleteMicrostructureSimulationForbidden{}
}

/*DeleteMicrostructureSimulationForbidden handles this case with default header values.

Forbidden
*/
type DeleteMicrostructureSimulationForbidden struct {
	Payload *models.Error
}

func (o *DeleteMicrostructureSimulationForbidden) Error() string {
	return fmt.Sprintf("[DELETE /microstructuresimulations/{id}][%d] deleteMicrostructureSimulationForbidden  %+v", 403, o.Payload)
}

func (o *DeleteMicrostructureSimulationForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewDeleteMicrostructureSimulationNotFound creates a DeleteMicrostructureSimulationNotFound with default headers values
func NewDeleteMicrostructureSimulationNotFound() *DeleteMicrostructureSimulationNotFound {
	return &DeleteMicrostructureSimulationNotFound{}
}

/*DeleteMicrostructureSimulationNotFound handles this case with default header values.

Not Found
*/
type DeleteMicrostructureSimulationNotFound struct {
}

func (o *DeleteMicrostructureSimulationNotFound) Error() string {
	return fmt.Sprintf("[DELETE /microstructuresimulations/{id}][%d] deleteMicrostructureSimulationNotFound ", 404)
}

func (o *DeleteMicrostructureSimulationNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewDeleteMicrostructureSimulationDefault creates a DeleteMicrostructureSimulationDefault with default headers values
func NewDeleteMicrostructureSimulationDefault(code int) *DeleteMicrostructureSimulationDefault {
	return &DeleteMicrostructureSimulationDefault{
		_statusCode: code,
	}
}

/*DeleteMicrostructureSimulationDefault handles this case with default header values.

unexpected error
*/
type DeleteMicrostructureSimulationDefault struct {
	_statusCode int

	Payload *models.Error
}

// Code gets the status code for the delete microstructure simulation default response
func (o *DeleteMicrostructureSimulationDefault) Code() int {
	return o._statusCode
}

func (o *DeleteMicrostructureSimulationDefault) Error() string {
	return fmt.Sprintf("[DELETE /microstructuresimulations/{id}][%d] deleteMicrostructureSimulation default  %+v", o._statusCode, o.Payload)
}

func (o *DeleteMicrostructureSimulationDefault) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
