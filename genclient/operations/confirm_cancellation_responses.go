// Code generated by go-swagger; DO NOT EDIT.

package operations

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"

	strfmt "github.com/go-openapi/strfmt"

	"github.com/3dsim/simulation-goclient/models"
)

// ConfirmCancellationReader is a Reader for the ConfirmCancellation structure.
type ConfirmCancellationReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *ConfirmCancellationReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {

	case 200:
		result := NewConfirmCancellationOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil

	case 401:
		result := NewConfirmCancellationUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 403:
		result := NewConfirmCancellationForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 404:
		result := NewConfirmCancellationNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		result := NewConfirmCancellationDefault(response.Code())
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		if response.Code()/100 == 2 {
			return result, nil
		}
		return nil, result
	}
}

// NewConfirmCancellationOK creates a ConfirmCancellationOK with default headers values
func NewConfirmCancellationOK() *ConfirmCancellationOK {
	return &ConfirmCancellationOK{}
}

/*ConfirmCancellationOK handles this case with default header values.

Successfully set status to cancelled
*/
type ConfirmCancellationOK struct {
	Payload *models.Part
}

func (o *ConfirmCancellationOK) Error() string {
	return fmt.Sprintf("[PUT /simulations/{id}/cancelled][%d] confirmCancellationOK  %+v", 200, o.Payload)
}

func (o *ConfirmCancellationOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Part)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewConfirmCancellationUnauthorized creates a ConfirmCancellationUnauthorized with default headers values
func NewConfirmCancellationUnauthorized() *ConfirmCancellationUnauthorized {
	return &ConfirmCancellationUnauthorized{}
}

/*ConfirmCancellationUnauthorized handles this case with default header values.

Not authorized
*/
type ConfirmCancellationUnauthorized struct {
	Payload *models.Error
}

func (o *ConfirmCancellationUnauthorized) Error() string {
	return fmt.Sprintf("[PUT /simulations/{id}/cancelled][%d] confirmCancellationUnauthorized  %+v", 401, o.Payload)
}

func (o *ConfirmCancellationUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewConfirmCancellationForbidden creates a ConfirmCancellationForbidden with default headers values
func NewConfirmCancellationForbidden() *ConfirmCancellationForbidden {
	return &ConfirmCancellationForbidden{}
}

/*ConfirmCancellationForbidden handles this case with default header values.

Forbidden
*/
type ConfirmCancellationForbidden struct {
	Payload *models.Error
}

func (o *ConfirmCancellationForbidden) Error() string {
	return fmt.Sprintf("[PUT /simulations/{id}/cancelled][%d] confirmCancellationForbidden  %+v", 403, o.Payload)
}

func (o *ConfirmCancellationForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewConfirmCancellationNotFound creates a ConfirmCancellationNotFound with default headers values
func NewConfirmCancellationNotFound() *ConfirmCancellationNotFound {
	return &ConfirmCancellationNotFound{}
}

/*ConfirmCancellationNotFound handles this case with default header values.

Not Found
*/
type ConfirmCancellationNotFound struct {
}

func (o *ConfirmCancellationNotFound) Error() string {
	return fmt.Sprintf("[PUT /simulations/{id}/cancelled][%d] confirmCancellationNotFound ", 404)
}

func (o *ConfirmCancellationNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewConfirmCancellationDefault creates a ConfirmCancellationDefault with default headers values
func NewConfirmCancellationDefault(code int) *ConfirmCancellationDefault {
	return &ConfirmCancellationDefault{
		_statusCode: code,
	}
}

/*ConfirmCancellationDefault handles this case with default header values.

unexpected error
*/
type ConfirmCancellationDefault struct {
	_statusCode int

	Payload *models.Error
}

// Code gets the status code for the confirm cancellation default response
func (o *ConfirmCancellationDefault) Code() int {
	return o._statusCode
}

func (o *ConfirmCancellationDefault) Error() string {
	return fmt.Sprintf("[PUT /simulations/{id}/cancelled][%d] ConfirmCancellation default  %+v", o._statusCode, o.Payload)
}

func (o *ConfirmCancellationDefault) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
