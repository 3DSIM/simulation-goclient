// Code generated by go-swagger; DO NOT EDIT.

package operations

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"

	strfmt "github.com/go-openapi/strfmt"

	"github.com/3dsim/simulation-goclient/models"
)

// GetBuildFileUploadURLReader is a Reader for the GetBuildFileUploadURL structure.
type GetBuildFileUploadURLReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GetBuildFileUploadURLReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {

	case 200:
		result := NewGetBuildFileUploadURLOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil

	default:
		result := NewGetBuildFileUploadURLDefault(response.Code())
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		if response.Code()/100 == 2 {
			return result, nil
		}
		return nil, result
	}
}

// NewGetBuildFileUploadURLOK creates a GetBuildFileUploadURLOK with default headers values
func NewGetBuildFileUploadURLOK() *GetBuildFileUploadURLOK {
	return &GetBuildFileUploadURLOK{}
}

/*GetBuildFileUploadURLOK handles this case with default header values.

URL to use for uploading a ZIP file containing build file components
*/
type GetBuildFileUploadURLOK struct {
	Payload string
}

func (o *GetBuildFileUploadURLOK) Error() string {
	return fmt.Sprintf("[GET /buildfiles/buildfileuploadurl][%d] getBuildFileUploadUrlOK  %+v", 200, o.Payload)
}

func (o *GetBuildFileUploadURLOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetBuildFileUploadURLDefault creates a GetBuildFileUploadURLDefault with default headers values
func NewGetBuildFileUploadURLDefault(code int) *GetBuildFileUploadURLDefault {
	return &GetBuildFileUploadURLDefault{
		_statusCode: code,
	}
}

/*GetBuildFileUploadURLDefault handles this case with default header values.

unexpected error
*/
type GetBuildFileUploadURLDefault struct {
	_statusCode int

	Payload *models.Error
}

// Code gets the status code for the get build file upload Url default response
func (o *GetBuildFileUploadURLDefault) Code() int {
	return o._statusCode
}

func (o *GetBuildFileUploadURLDefault) Error() string {
	return fmt.Sprintf("[GET /buildfiles/buildfileuploadurl][%d] getBuildFileUploadUrl default  %+v", o._statusCode, o.Payload)
}

func (o *GetBuildFileUploadURLDefault) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
