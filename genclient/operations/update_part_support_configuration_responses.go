// Code generated by go-swagger; DO NOT EDIT.

package operations

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"

	strfmt "github.com/go-openapi/strfmt"

	"github.com/3dsim/simulation-goclient/models"
)

// UpdatePartSupportConfigurationReader is a Reader for the UpdatePartSupportConfiguration structure.
type UpdatePartSupportConfigurationReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *UpdatePartSupportConfigurationReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {

	case 200:
		result := NewUpdatePartSupportConfigurationOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil

	case 403:
		result := NewUpdatePartSupportConfigurationForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		result := NewUpdatePartSupportConfigurationDefault(response.Code())
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		if response.Code()/100 == 2 {
			return result, nil
		}
		return nil, result
	}
}

// NewUpdatePartSupportConfigurationOK creates a UpdatePartSupportConfigurationOK with default headers values
func NewUpdatePartSupportConfigurationOK() *UpdatePartSupportConfigurationOK {
	return &UpdatePartSupportConfigurationOK{}
}

/*UpdatePartSupportConfigurationOK handles this case with default header values.

Successfully updated a part support configuration
*/
type UpdatePartSupportConfigurationOK struct {
	Payload *models.PartSupportConfiguration
}

func (o *UpdatePartSupportConfigurationOK) Error() string {
	return fmt.Sprintf("[PUT /parts/{partId}/supportconfigurations/{supportConfigurationId}][%d] updatePartSupportConfigurationOK  %+v", 200, o.Payload)
}

func (o *UpdatePartSupportConfigurationOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.PartSupportConfiguration)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewUpdatePartSupportConfigurationForbidden creates a UpdatePartSupportConfigurationForbidden with default headers values
func NewUpdatePartSupportConfigurationForbidden() *UpdatePartSupportConfigurationForbidden {
	return &UpdatePartSupportConfigurationForbidden{}
}

/*UpdatePartSupportConfigurationForbidden handles this case with default header values.

Forbidden
*/
type UpdatePartSupportConfigurationForbidden struct {
	Payload *models.Error
}

func (o *UpdatePartSupportConfigurationForbidden) Error() string {
	return fmt.Sprintf("[PUT /parts/{partId}/supportconfigurations/{supportConfigurationId}][%d] updatePartSupportConfigurationForbidden  %+v", 403, o.Payload)
}

func (o *UpdatePartSupportConfigurationForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewUpdatePartSupportConfigurationDefault creates a UpdatePartSupportConfigurationDefault with default headers values
func NewUpdatePartSupportConfigurationDefault(code int) *UpdatePartSupportConfigurationDefault {
	return &UpdatePartSupportConfigurationDefault{
		_statusCode: code,
	}
}

/*UpdatePartSupportConfigurationDefault handles this case with default header values.

unexpected error
*/
type UpdatePartSupportConfigurationDefault struct {
	_statusCode int

	Payload *models.Error
}

// Code gets the status code for the update part support configuration default response
func (o *UpdatePartSupportConfigurationDefault) Code() int {
	return o._statusCode
}

func (o *UpdatePartSupportConfigurationDefault) Error() string {
	return fmt.Sprintf("[PUT /parts/{partId}/supportconfigurations/{supportConfigurationId}][%d] updatePartSupportConfiguration default  %+v", o._statusCode, o.Payload)
}

func (o *UpdatePartSupportConfigurationDefault) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
