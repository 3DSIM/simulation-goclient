// Code generated by go-swagger; DO NOT EDIT.

package operations

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"net/http"
	"time"

	"golang.org/x/net/context"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/runtime"
	cr "github.com/go-openapi/runtime/client"
	"github.com/go-openapi/swag"

	strfmt "github.com/go-openapi/strfmt"

	"github.com/3dsim/simulation-goclient/models"
)

// NewPatchActivityParams creates a new PatchActivityParams object
// with the default values initialized.
func NewPatchActivityParams() *PatchActivityParams {
	var ()
	return &PatchActivityParams{

		timeout: cr.DefaultTimeout,
	}
}

// NewPatchActivityParamsWithTimeout creates a new PatchActivityParams object
// with the default values initialized, and the ability to set a timeout on a request
func NewPatchActivityParamsWithTimeout(timeout time.Duration) *PatchActivityParams {
	var ()
	return &PatchActivityParams{

		timeout: timeout,
	}
}

// NewPatchActivityParamsWithContext creates a new PatchActivityParams object
// with the default values initialized, and the ability to set a context for a request
func NewPatchActivityParamsWithContext(ctx context.Context) *PatchActivityParams {
	var ()
	return &PatchActivityParams{

		Context: ctx,
	}
}

// NewPatchActivityParamsWithHTTPClient creates a new PatchActivityParams object
// with the default values initialized, and the ability to set a custom HTTPClient for a request
func NewPatchActivityParamsWithHTTPClient(client *http.Client) *PatchActivityParams {
	var ()
	return &PatchActivityParams{
		HTTPClient: client,
	}
}

/*PatchActivityParams contains all the parameters to send to the API endpoint
for the patch activity operation typically these are written to a http.Request
*/
type PatchActivityParams struct {

	/*ActivityID
	  activity identifier

	*/
	ActivityID int32
	/*ActivityPatch
	  This endpoint uses JSON Patch, RFC 6092.

	*/
	ActivityPatch []*models.PatchDocument
	/*ID
	  simulation identifier

	*/
	ID int32

	timeout    time.Duration
	Context    context.Context
	HTTPClient *http.Client
}

// WithTimeout adds the timeout to the patch activity params
func (o *PatchActivityParams) WithTimeout(timeout time.Duration) *PatchActivityParams {
	o.SetTimeout(timeout)
	return o
}

// SetTimeout adds the timeout to the patch activity params
func (o *PatchActivityParams) SetTimeout(timeout time.Duration) {
	o.timeout = timeout
}

// WithContext adds the context to the patch activity params
func (o *PatchActivityParams) WithContext(ctx context.Context) *PatchActivityParams {
	o.SetContext(ctx)
	return o
}

// SetContext adds the context to the patch activity params
func (o *PatchActivityParams) SetContext(ctx context.Context) {
	o.Context = ctx
}

// WithHTTPClient adds the HTTPClient to the patch activity params
func (o *PatchActivityParams) WithHTTPClient(client *http.Client) *PatchActivityParams {
	o.SetHTTPClient(client)
	return o
}

// SetHTTPClient adds the HTTPClient to the patch activity params
func (o *PatchActivityParams) SetHTTPClient(client *http.Client) {
	o.HTTPClient = client
}

// WithActivityID adds the activityID to the patch activity params
func (o *PatchActivityParams) WithActivityID(activityID int32) *PatchActivityParams {
	o.SetActivityID(activityID)
	return o
}

// SetActivityID adds the activityId to the patch activity params
func (o *PatchActivityParams) SetActivityID(activityID int32) {
	o.ActivityID = activityID
}

// WithActivityPatch adds the activityPatch to the patch activity params
func (o *PatchActivityParams) WithActivityPatch(activityPatch []*models.PatchDocument) *PatchActivityParams {
	o.SetActivityPatch(activityPatch)
	return o
}

// SetActivityPatch adds the activityPatch to the patch activity params
func (o *PatchActivityParams) SetActivityPatch(activityPatch []*models.PatchDocument) {
	o.ActivityPatch = activityPatch
}

// WithID adds the id to the patch activity params
func (o *PatchActivityParams) WithID(id int32) *PatchActivityParams {
	o.SetID(id)
	return o
}

// SetID adds the id to the patch activity params
func (o *PatchActivityParams) SetID(id int32) {
	o.ID = id
}

// WriteToRequest writes these params to a swagger request
func (o *PatchActivityParams) WriteToRequest(r runtime.ClientRequest, reg strfmt.Registry) error {

	if err := r.SetTimeout(o.timeout); err != nil {
		return err
	}
	var res []error

	// path param activityId
	if err := r.SetPathParam("activityId", swag.FormatInt32(o.ActivityID)); err != nil {
		return err
	}

	if err := r.SetBodyParam(o.ActivityPatch); err != nil {
		return err
	}

	// path param id
	if err := r.SetPathParam("id", swag.FormatInt32(o.ID)); err != nil {
		return err
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}
