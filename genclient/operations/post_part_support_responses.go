// Code generated by go-swagger; DO NOT EDIT.

package operations

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"

	strfmt "github.com/go-openapi/strfmt"

	"github.com/3dsim/simulation-goclient/models"
)

// PostPartSupportReader is a Reader for the PostPartSupport structure.
type PostPartSupportReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *PostPartSupportReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {

	case 200:
		result := NewPostPartSupportOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil

	case 403:
		result := NewPostPartSupportForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		result := NewPostPartSupportDefault(response.Code())
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		if response.Code()/100 == 2 {
			return result, nil
		}
		return nil, result
	}
}

// NewPostPartSupportOK creates a PostPartSupportOK with default headers values
func NewPostPartSupportOK() *PostPartSupportOK {
	return &PostPartSupportOK{}
}

/*PostPartSupportOK handles this case with default header values.

Successfully added a part support
*/
type PostPartSupportOK struct {
	Payload *models.PartSupport
}

func (o *PostPartSupportOK) Error() string {
	return fmt.Sprintf("[POST /parts/{partId}/supports][%d] postPartSupportOK  %+v", 200, o.Payload)
}

func (o *PostPartSupportOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.PartSupport)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPostPartSupportForbidden creates a PostPartSupportForbidden with default headers values
func NewPostPartSupportForbidden() *PostPartSupportForbidden {
	return &PostPartSupportForbidden{}
}

/*PostPartSupportForbidden handles this case with default header values.

Forbidden
*/
type PostPartSupportForbidden struct {
	Payload *models.Error
}

func (o *PostPartSupportForbidden) Error() string {
	return fmt.Sprintf("[POST /parts/{partId}/supports][%d] postPartSupportForbidden  %+v", 403, o.Payload)
}

func (o *PostPartSupportForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPostPartSupportDefault creates a PostPartSupportDefault with default headers values
func NewPostPartSupportDefault(code int) *PostPartSupportDefault {
	return &PostPartSupportDefault{
		_statusCode: code,
	}
}

/*PostPartSupportDefault handles this case with default header values.

unexpected error
*/
type PostPartSupportDefault struct {
	_statusCode int

	Payload *models.Error
}

// Code gets the status code for the post part support default response
func (o *PostPartSupportDefault) Code() int {
	return o._statusCode
}

func (o *PostPartSupportDefault) Error() string {
	return fmt.Sprintf("[POST /parts/{partId}/supports][%d] postPartSupport default  %+v", o._statusCode, o.Payload)
}

func (o *PostPartSupportDefault) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
