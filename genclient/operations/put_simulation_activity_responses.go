// Code generated by go-swagger; DO NOT EDIT.

package operations

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"

	strfmt "github.com/go-openapi/strfmt"

	"github.com/3dsim/simulation-goclient/models"
)

// PutSimulationActivityReader is a Reader for the PutSimulationActivity structure.
type PutSimulationActivityReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *PutSimulationActivityReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {

	case 200:
		result := NewPutSimulationActivityOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil

	case 401:
		result := NewPutSimulationActivityUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 403:
		result := NewPutSimulationActivityForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		result := NewPutSimulationActivityDefault(response.Code())
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		if response.Code()/100 == 2 {
			return result, nil
		}
		return nil, result
	}
}

// NewPutSimulationActivityOK creates a PutSimulationActivityOK with default headers values
func NewPutSimulationActivityOK() *PutSimulationActivityOK {
	return &PutSimulationActivityOK{}
}

/*PutSimulationActivityOK handles this case with default header values.

Successfully updated the item
*/
type PutSimulationActivityOK struct {
	Payload *models.SimulationActivity
}

func (o *PutSimulationActivityOK) Error() string {
	return fmt.Sprintf("[PUT /simulations/{id}/activities/{activityId}][%d] putSimulationActivityOK  %+v", 200, o.Payload)
}

func (o *PutSimulationActivityOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.SimulationActivity)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPutSimulationActivityUnauthorized creates a PutSimulationActivityUnauthorized with default headers values
func NewPutSimulationActivityUnauthorized() *PutSimulationActivityUnauthorized {
	return &PutSimulationActivityUnauthorized{}
}

/*PutSimulationActivityUnauthorized handles this case with default header values.

Not authorized
*/
type PutSimulationActivityUnauthorized struct {
	Payload *models.Error
}

func (o *PutSimulationActivityUnauthorized) Error() string {
	return fmt.Sprintf("[PUT /simulations/{id}/activities/{activityId}][%d] putSimulationActivityUnauthorized  %+v", 401, o.Payload)
}

func (o *PutSimulationActivityUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPutSimulationActivityForbidden creates a PutSimulationActivityForbidden with default headers values
func NewPutSimulationActivityForbidden() *PutSimulationActivityForbidden {
	return &PutSimulationActivityForbidden{}
}

/*PutSimulationActivityForbidden handles this case with default header values.

Forbidden
*/
type PutSimulationActivityForbidden struct {
	Payload *models.Error
}

func (o *PutSimulationActivityForbidden) Error() string {
	return fmt.Sprintf("[PUT /simulations/{id}/activities/{activityId}][%d] putSimulationActivityForbidden  %+v", 403, o.Payload)
}

func (o *PutSimulationActivityForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPutSimulationActivityDefault creates a PutSimulationActivityDefault with default headers values
func NewPutSimulationActivityDefault(code int) *PutSimulationActivityDefault {
	return &PutSimulationActivityDefault{
		_statusCode: code,
	}
}

/*PutSimulationActivityDefault handles this case with default header values.

unexpected error
*/
type PutSimulationActivityDefault struct {
	_statusCode int

	Payload *models.Error
}

// Code gets the status code for the put simulation activity default response
func (o *PutSimulationActivityDefault) Code() int {
	return o._statusCode
}

func (o *PutSimulationActivityDefault) Error() string {
	return fmt.Sprintf("[PUT /simulations/{id}/activities/{activityId}][%d] putSimulationActivity default  %+v", o._statusCode, o.Payload)
}

func (o *PutSimulationActivityDefault) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
