// Code generated by go-swagger; DO NOT EDIT.

package operations

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"

	strfmt "github.com/go-openapi/strfmt"

	"github.com/3dsim/simulation-goclient/models"
)

// RequestCancellationReader is a Reader for the RequestCancellation structure.
type RequestCancellationReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *RequestCancellationReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {

	case 200:
		result := NewRequestCancellationOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil

	case 401:
		result := NewRequestCancellationUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 403:
		result := NewRequestCancellationForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 404:
		result := NewRequestCancellationNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		result := NewRequestCancellationDefault(response.Code())
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		if response.Code()/100 == 2 {
			return result, nil
		}
		return nil, result
	}
}

// NewRequestCancellationOK creates a RequestCancellationOK with default headers values
func NewRequestCancellationOK() *RequestCancellationOK {
	return &RequestCancellationOK{}
}

/*RequestCancellationOK handles this case with default header values.

Successfully requested cancellation
*/
type RequestCancellationOK struct {
	Payload *models.Part
}

func (o *RequestCancellationOK) Error() string {
	return fmt.Sprintf("[PUT /simulations/{id}/cancel][%d] requestCancellationOK  %+v", 200, o.Payload)
}

func (o *RequestCancellationOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Part)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewRequestCancellationUnauthorized creates a RequestCancellationUnauthorized with default headers values
func NewRequestCancellationUnauthorized() *RequestCancellationUnauthorized {
	return &RequestCancellationUnauthorized{}
}

/*RequestCancellationUnauthorized handles this case with default header values.

Not authorized
*/
type RequestCancellationUnauthorized struct {
	Payload *models.Error
}

func (o *RequestCancellationUnauthorized) Error() string {
	return fmt.Sprintf("[PUT /simulations/{id}/cancel][%d] requestCancellationUnauthorized  %+v", 401, o.Payload)
}

func (o *RequestCancellationUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewRequestCancellationForbidden creates a RequestCancellationForbidden with default headers values
func NewRequestCancellationForbidden() *RequestCancellationForbidden {
	return &RequestCancellationForbidden{}
}

/*RequestCancellationForbidden handles this case with default header values.

Forbidden
*/
type RequestCancellationForbidden struct {
	Payload *models.Error
}

func (o *RequestCancellationForbidden) Error() string {
	return fmt.Sprintf("[PUT /simulations/{id}/cancel][%d] requestCancellationForbidden  %+v", 403, o.Payload)
}

func (o *RequestCancellationForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewRequestCancellationNotFound creates a RequestCancellationNotFound with default headers values
func NewRequestCancellationNotFound() *RequestCancellationNotFound {
	return &RequestCancellationNotFound{}
}

/*RequestCancellationNotFound handles this case with default header values.

Not Found
*/
type RequestCancellationNotFound struct {
}

func (o *RequestCancellationNotFound) Error() string {
	return fmt.Sprintf("[PUT /simulations/{id}/cancel][%d] requestCancellationNotFound ", 404)
}

func (o *RequestCancellationNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewRequestCancellationDefault creates a RequestCancellationDefault with default headers values
func NewRequestCancellationDefault(code int) *RequestCancellationDefault {
	return &RequestCancellationDefault{
		_statusCode: code,
	}
}

/*RequestCancellationDefault handles this case with default header values.

unexpected error
*/
type RequestCancellationDefault struct {
	_statusCode int

	Payload *models.Error
}

// Code gets the status code for the request cancellation default response
func (o *RequestCancellationDefault) Code() int {
	return o._statusCode
}

func (o *RequestCancellationDefault) Error() string {
	return fmt.Sprintf("[PUT /simulations/{id}/cancel][%d] RequestCancellation default  %+v", o._statusCode, o.Payload)
}

func (o *RequestCancellationDefault) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
